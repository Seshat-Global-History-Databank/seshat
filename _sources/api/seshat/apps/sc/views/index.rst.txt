seshat.apps.sc.views
====================

.. py:module:: seshat.apps.sc.views


Classes
-------

.. autoapisummary::

   seshat.apps.sc.views.Administrative_levelCreate
   seshat.apps.sc.views.Administrative_levelDelete
   seshat.apps.sc.views.Administrative_levelDetailView
   seshat.apps.sc.views.Administrative_levelListView
   seshat.apps.sc.views.Administrative_levelListViewAll
   seshat.apps.sc.views.Administrative_levelUpdate
   seshat.apps.sc.views.ArticleCreate
   seshat.apps.sc.views.ArticleDelete
   seshat.apps.sc.views.ArticleDetailView
   seshat.apps.sc.views.ArticleListView
   seshat.apps.sc.views.ArticleListViewAll
   seshat.apps.sc.views.ArticleUpdate
   seshat.apps.sc.views.BridgeCreate
   seshat.apps.sc.views.BridgeDelete
   seshat.apps.sc.views.BridgeDetailView
   seshat.apps.sc.views.BridgeListView
   seshat.apps.sc.views.BridgeListViewAll
   seshat.apps.sc.views.BridgeUpdate
   seshat.apps.sc.views.CalendarCreate
   seshat.apps.sc.views.CalendarDelete
   seshat.apps.sc.views.CalendarDetailView
   seshat.apps.sc.views.CalendarListView
   seshat.apps.sc.views.CalendarListViewAll
   seshat.apps.sc.views.CalendarUpdate
   seshat.apps.sc.views.CanalCreate
   seshat.apps.sc.views.CanalDelete
   seshat.apps.sc.views.CanalDetailView
   seshat.apps.sc.views.CanalListView
   seshat.apps.sc.views.CanalListViewAll
   seshat.apps.sc.views.CanalUpdate
   seshat.apps.sc.views.CourierCreate
   seshat.apps.sc.views.CourierDelete
   seshat.apps.sc.views.CourierDetailView
   seshat.apps.sc.views.CourierListView
   seshat.apps.sc.views.CourierListViewAll
   seshat.apps.sc.views.CourierUpdate
   seshat.apps.sc.views.CourtCreate
   seshat.apps.sc.views.CourtDelete
   seshat.apps.sc.views.CourtDetailView
   seshat.apps.sc.views.CourtListView
   seshat.apps.sc.views.CourtListViewAll
   seshat.apps.sc.views.CourtUpdate
   seshat.apps.sc.views.Drinking_water_supply_systemCreate
   seshat.apps.sc.views.Drinking_water_supply_systemDelete
   seshat.apps.sc.views.Drinking_water_supply_systemDetailView
   seshat.apps.sc.views.Drinking_water_supply_systemListView
   seshat.apps.sc.views.Drinking_water_supply_systemListViewAll
   seshat.apps.sc.views.Drinking_water_supply_systemUpdate
   seshat.apps.sc.views.Examination_systemCreate
   seshat.apps.sc.views.Examination_systemDelete
   seshat.apps.sc.views.Examination_systemDetailView
   seshat.apps.sc.views.Examination_systemListView
   seshat.apps.sc.views.Examination_systemListViewAll
   seshat.apps.sc.views.Examination_systemUpdate
   seshat.apps.sc.views.FictionCreate
   seshat.apps.sc.views.FictionDelete
   seshat.apps.sc.views.FictionDetailView
   seshat.apps.sc.views.FictionListView
   seshat.apps.sc.views.FictionListViewAll
   seshat.apps.sc.views.FictionUpdate
   seshat.apps.sc.views.Food_storage_siteCreate
   seshat.apps.sc.views.Food_storage_siteDelete
   seshat.apps.sc.views.Food_storage_siteDetailView
   seshat.apps.sc.views.Food_storage_siteListView
   seshat.apps.sc.views.Food_storage_siteListViewAll
   seshat.apps.sc.views.Food_storage_siteUpdate
   seshat.apps.sc.views.Foreign_coinCreate
   seshat.apps.sc.views.Foreign_coinDelete
   seshat.apps.sc.views.Foreign_coinDetailView
   seshat.apps.sc.views.Foreign_coinListView
   seshat.apps.sc.views.Foreign_coinListViewAll
   seshat.apps.sc.views.Foreign_coinUpdate
   seshat.apps.sc.views.Formal_legal_codeCreate
   seshat.apps.sc.views.Formal_legal_codeDelete
   seshat.apps.sc.views.Formal_legal_codeDetailView
   seshat.apps.sc.views.Formal_legal_codeListView
   seshat.apps.sc.views.Formal_legal_codeListViewAll
   seshat.apps.sc.views.Formal_legal_codeUpdate
   seshat.apps.sc.views.Full_time_bureaucratCreate
   seshat.apps.sc.views.Full_time_bureaucratDelete
   seshat.apps.sc.views.Full_time_bureaucratDetailView
   seshat.apps.sc.views.Full_time_bureaucratListView
   seshat.apps.sc.views.Full_time_bureaucratListViewAll
   seshat.apps.sc.views.Full_time_bureaucratUpdate
   seshat.apps.sc.views.General_postal_serviceCreate
   seshat.apps.sc.views.General_postal_serviceDelete
   seshat.apps.sc.views.General_postal_serviceDetailView
   seshat.apps.sc.views.General_postal_serviceListView
   seshat.apps.sc.views.General_postal_serviceListViewAll
   seshat.apps.sc.views.General_postal_serviceUpdate
   seshat.apps.sc.views.HistoryCreate
   seshat.apps.sc.views.HistoryDelete
   seshat.apps.sc.views.HistoryDetailView
   seshat.apps.sc.views.HistoryListView
   seshat.apps.sc.views.HistoryListViewAll
   seshat.apps.sc.views.HistoryUpdate
   seshat.apps.sc.views.Indigenous_coinCreate
   seshat.apps.sc.views.Indigenous_coinDelete
   seshat.apps.sc.views.Indigenous_coinDetailView
   seshat.apps.sc.views.Indigenous_coinListView
   seshat.apps.sc.views.Indigenous_coinListViewAll
   seshat.apps.sc.views.Indigenous_coinUpdate
   seshat.apps.sc.views.Irrigation_systemCreate
   seshat.apps.sc.views.Irrigation_systemDelete
   seshat.apps.sc.views.Irrigation_systemDetailView
   seshat.apps.sc.views.Irrigation_systemListView
   seshat.apps.sc.views.Irrigation_systemListViewAll
   seshat.apps.sc.views.Irrigation_systemUpdate
   seshat.apps.sc.views.JudgeCreate
   seshat.apps.sc.views.JudgeDelete
   seshat.apps.sc.views.JudgeDetailView
   seshat.apps.sc.views.JudgeListView
   seshat.apps.sc.views.JudgeListViewAll
   seshat.apps.sc.views.JudgeUpdate
   seshat.apps.sc.views.Lists_tables_and_classificationCreate
   seshat.apps.sc.views.Lists_tables_and_classificationDelete
   seshat.apps.sc.views.Lists_tables_and_classificationDetailView
   seshat.apps.sc.views.Lists_tables_and_classificationListView
   seshat.apps.sc.views.Lists_tables_and_classificationListViewAll
   seshat.apps.sc.views.Lists_tables_and_classificationUpdate
   seshat.apps.sc.views.MarketCreate
   seshat.apps.sc.views.MarketDelete
   seshat.apps.sc.views.MarketDetailView
   seshat.apps.sc.views.MarketListView
   seshat.apps.sc.views.MarketListViewAll
   seshat.apps.sc.views.MarketUpdate
   seshat.apps.sc.views.Merit_promotionCreate
   seshat.apps.sc.views.Merit_promotionDelete
   seshat.apps.sc.views.Merit_promotionDetailView
   seshat.apps.sc.views.Merit_promotionListView
   seshat.apps.sc.views.Merit_promotionListViewAll
   seshat.apps.sc.views.Merit_promotionUpdate
   seshat.apps.sc.views.Military_levelCreate
   seshat.apps.sc.views.Military_levelDelete
   seshat.apps.sc.views.Military_levelDetailView
   seshat.apps.sc.views.Military_levelListView
   seshat.apps.sc.views.Military_levelUpdate
   seshat.apps.sc.views.Mines_or_quarryCreate
   seshat.apps.sc.views.Mines_or_quarryDelete
   seshat.apps.sc.views.Mines_or_quarryDetailView
   seshat.apps.sc.views.Mines_or_quarryListView
   seshat.apps.sc.views.Mines_or_quarryListViewAll
   seshat.apps.sc.views.Mines_or_quarryUpdate
   seshat.apps.sc.views.Mnemonic_deviceCreate
   seshat.apps.sc.views.Mnemonic_deviceDelete
   seshat.apps.sc.views.Mnemonic_deviceDetailView
   seshat.apps.sc.views.Mnemonic_deviceListView
   seshat.apps.sc.views.Mnemonic_deviceListViewAll
   seshat.apps.sc.views.Mnemonic_deviceUpdate
   seshat.apps.sc.views.Non_phonetic_writingCreate
   seshat.apps.sc.views.Non_phonetic_writingDelete
   seshat.apps.sc.views.Non_phonetic_writingDetailView
   seshat.apps.sc.views.Non_phonetic_writingListView
   seshat.apps.sc.views.Non_phonetic_writingListViewAll
   seshat.apps.sc.views.Non_phonetic_writingUpdate
   seshat.apps.sc.views.Nonwritten_recordCreate
   seshat.apps.sc.views.Nonwritten_recordDelete
   seshat.apps.sc.views.Nonwritten_recordDetailView
   seshat.apps.sc.views.Nonwritten_recordListView
   seshat.apps.sc.views.Nonwritten_recordListViewAll
   seshat.apps.sc.views.Nonwritten_recordUpdate
   seshat.apps.sc.views.Paper_currencyCreate
   seshat.apps.sc.views.Paper_currencyDelete
   seshat.apps.sc.views.Paper_currencyDetailView
   seshat.apps.sc.views.Paper_currencyListView
   seshat.apps.sc.views.Paper_currencyListViewAll
   seshat.apps.sc.views.Paper_currencyUpdate
   seshat.apps.sc.views.PhilosophyCreate
   seshat.apps.sc.views.PhilosophyDelete
   seshat.apps.sc.views.PhilosophyDetailView
   seshat.apps.sc.views.PhilosophyListView
   seshat.apps.sc.views.PhilosophyListViewAll
   seshat.apps.sc.views.PhilosophyUpdate
   seshat.apps.sc.views.Phonetic_alphabetic_writingCreate
   seshat.apps.sc.views.Phonetic_alphabetic_writingDelete
   seshat.apps.sc.views.Phonetic_alphabetic_writingDetailView
   seshat.apps.sc.views.Phonetic_alphabetic_writingListView
   seshat.apps.sc.views.Phonetic_alphabetic_writingListViewAll
   seshat.apps.sc.views.Phonetic_alphabetic_writingUpdate
   seshat.apps.sc.views.Polity_populationCreate
   seshat.apps.sc.views.Polity_populationDelete
   seshat.apps.sc.views.Polity_populationDetailView
   seshat.apps.sc.views.Polity_populationListView
   seshat.apps.sc.views.Polity_populationListViewAll
   seshat.apps.sc.views.Polity_populationUpdate
   seshat.apps.sc.views.Polity_territoryCreate
   seshat.apps.sc.views.Polity_territoryDelete
   seshat.apps.sc.views.Polity_territoryDetailView
   seshat.apps.sc.views.Polity_territoryListView
   seshat.apps.sc.views.Polity_territoryListViewAll
   seshat.apps.sc.views.Polity_territoryUpdate
   seshat.apps.sc.views.Population_of_the_largest_settlementCreate
   seshat.apps.sc.views.Population_of_the_largest_settlementDelete
   seshat.apps.sc.views.Population_of_the_largest_settlementDetailView
   seshat.apps.sc.views.Population_of_the_largest_settlementListView
   seshat.apps.sc.views.Population_of_the_largest_settlementListViewAll
   seshat.apps.sc.views.Population_of_the_largest_settlementUpdate
   seshat.apps.sc.views.PortCreate
   seshat.apps.sc.views.PortDelete
   seshat.apps.sc.views.PortDetailView
   seshat.apps.sc.views.PortListView
   seshat.apps.sc.views.PortListViewAll
   seshat.apps.sc.views.PortUpdate
   seshat.apps.sc.views.Postal_stationCreate
   seshat.apps.sc.views.Postal_stationDelete
   seshat.apps.sc.views.Postal_stationDetailView
   seshat.apps.sc.views.Postal_stationListView
   seshat.apps.sc.views.Postal_stationListViewAll
   seshat.apps.sc.views.Postal_stationUpdate
   seshat.apps.sc.views.Practical_literatureCreate
   seshat.apps.sc.views.Practical_literatureDelete
   seshat.apps.sc.views.Practical_literatureDetailView
   seshat.apps.sc.views.Practical_literatureListView
   seshat.apps.sc.views.Practical_literatureListViewAll
   seshat.apps.sc.views.Practical_literatureUpdate
   seshat.apps.sc.views.Precious_metalCreate
   seshat.apps.sc.views.Precious_metalDelete
   seshat.apps.sc.views.Precious_metalDetailView
   seshat.apps.sc.views.Precious_metalListView
   seshat.apps.sc.views.Precious_metalListViewAll
   seshat.apps.sc.views.Precious_metalUpdate
   seshat.apps.sc.views.Professional_lawyerCreate
   seshat.apps.sc.views.Professional_lawyerDelete
   seshat.apps.sc.views.Professional_lawyerDetailView
   seshat.apps.sc.views.Professional_lawyerListView
   seshat.apps.sc.views.Professional_lawyerListViewAll
   seshat.apps.sc.views.Professional_lawyerUpdate
   seshat.apps.sc.views.Professional_military_officerCreate
   seshat.apps.sc.views.Professional_military_officerDelete
   seshat.apps.sc.views.Professional_military_officerDetailView
   seshat.apps.sc.views.Professional_military_officerListView
   seshat.apps.sc.views.Professional_military_officerListViewAll
   seshat.apps.sc.views.Professional_military_officerUpdate
   seshat.apps.sc.views.Professional_priesthoodCreate
   seshat.apps.sc.views.Professional_priesthoodDelete
   seshat.apps.sc.views.Professional_priesthoodDetailView
   seshat.apps.sc.views.Professional_priesthoodListView
   seshat.apps.sc.views.Professional_priesthoodListViewAll
   seshat.apps.sc.views.Professional_priesthoodUpdate
   seshat.apps.sc.views.Professional_soldierCreate
   seshat.apps.sc.views.Professional_soldierDelete
   seshat.apps.sc.views.Professional_soldierDetailView
   seshat.apps.sc.views.Professional_soldierListView
   seshat.apps.sc.views.Professional_soldierListViewAll
   seshat.apps.sc.views.Professional_soldierUpdate
   seshat.apps.sc.views.RaCreate
   seshat.apps.sc.views.RaDelete
   seshat.apps.sc.views.RaDetailView
   seshat.apps.sc.views.RaListView
   seshat.apps.sc.views.RaListViewAll
   seshat.apps.sc.views.RaUpdate
   seshat.apps.sc.views.Religious_levelCreate
   seshat.apps.sc.views.Religious_levelDelete
   seshat.apps.sc.views.Religious_levelDetailView
   seshat.apps.sc.views.Religious_levelListView
   seshat.apps.sc.views.Religious_levelListViewAll
   seshat.apps.sc.views.Religious_levelUpdate
   seshat.apps.sc.views.Religious_literatureCreate
   seshat.apps.sc.views.Religious_literatureDelete
   seshat.apps.sc.views.Religious_literatureDetailView
   seshat.apps.sc.views.Religious_literatureListView
   seshat.apps.sc.views.Religious_literatureListViewAll
   seshat.apps.sc.views.Religious_literatureUpdate
   seshat.apps.sc.views.RoadCreate
   seshat.apps.sc.views.RoadDelete
   seshat.apps.sc.views.RoadDetailView
   seshat.apps.sc.views.RoadListView
   seshat.apps.sc.views.RoadListViewAll
   seshat.apps.sc.views.RoadUpdate
   seshat.apps.sc.views.Sacred_textCreate
   seshat.apps.sc.views.Sacred_textDelete
   seshat.apps.sc.views.Sacred_textDetailView
   seshat.apps.sc.views.Sacred_textListView
   seshat.apps.sc.views.Sacred_textListViewAll
   seshat.apps.sc.views.Sacred_textUpdate
   seshat.apps.sc.views.Scientific_literatureCreate
   seshat.apps.sc.views.Scientific_literatureDelete
   seshat.apps.sc.views.Scientific_literatureDetailView
   seshat.apps.sc.views.Scientific_literatureListView
   seshat.apps.sc.views.Scientific_literatureListViewAll
   seshat.apps.sc.views.Scientific_literatureUpdate
   seshat.apps.sc.views.ScriptCreate
   seshat.apps.sc.views.ScriptDelete
   seshat.apps.sc.views.ScriptDetailView
   seshat.apps.sc.views.ScriptListView
   seshat.apps.sc.views.ScriptListViewAll
   seshat.apps.sc.views.ScriptUpdate
   seshat.apps.sc.views.Settlement_hierarchyCreate
   seshat.apps.sc.views.Settlement_hierarchyDelete
   seshat.apps.sc.views.Settlement_hierarchyDetailView
   seshat.apps.sc.views.Settlement_hierarchyListView
   seshat.apps.sc.views.Settlement_hierarchyListViewAll
   seshat.apps.sc.views.Settlement_hierarchyUpdate
   seshat.apps.sc.views.Specialized_government_buildingCreate
   seshat.apps.sc.views.Specialized_government_buildingDelete
   seshat.apps.sc.views.Specialized_government_buildingDetailView
   seshat.apps.sc.views.Specialized_government_buildingListView
   seshat.apps.sc.views.Specialized_government_buildingListViewAll
   seshat.apps.sc.views.Specialized_government_buildingUpdate
   seshat.apps.sc.views.TokenCreate
   seshat.apps.sc.views.TokenDelete
   seshat.apps.sc.views.TokenDetailView
   seshat.apps.sc.views.TokenListView
   seshat.apps.sc.views.TokenListViewAll
   seshat.apps.sc.views.TokenUpdate
   seshat.apps.sc.views.Written_recordCreate
   seshat.apps.sc.views.Written_recordDelete
   seshat.apps.sc.views.Written_recordDetailView
   seshat.apps.sc.views.Written_recordListView
   seshat.apps.sc.views.Written_recordListViewAll
   seshat.apps.sc.views.Written_recordUpdate


Functions
---------

.. autoapisummary::

   seshat.apps.sc.views.administrative_level_download
   seshat.apps.sc.views.administrative_level_meta_download
   seshat.apps.sc.views.article_download
   seshat.apps.sc.views.article_meta_download
   seshat.apps.sc.views.bridge_download
   seshat.apps.sc.views.bridge_meta_download
   seshat.apps.sc.views.calendar_download
   seshat.apps.sc.views.calendar_meta_download
   seshat.apps.sc.views.canal_download
   seshat.apps.sc.views.canal_meta_download
   seshat.apps.sc.views.confirm_delete_view
   seshat.apps.sc.views.courier_download
   seshat.apps.sc.views.courier_meta_download
   seshat.apps.sc.views.court_download
   seshat.apps.sc.views.court_meta_download
   seshat.apps.sc.views.delete_object_view
   seshat.apps.sc.views.download_csv_all_sc
   seshat.apps.sc.views.download_csv_bureaucracy_characteristics
   seshat.apps.sc.views.download_csv_hierarchical_complexity
   seshat.apps.sc.views.download_csv_information
   seshat.apps.sc.views.download_csv_law
   seshat.apps.sc.views.download_csv_professions
   seshat.apps.sc.views.download_csv_social_scale
   seshat.apps.sc.views.download_csv_special_purpose_sites
   seshat.apps.sc.views.download_csv_specialized_buildings_polity_owned
   seshat.apps.sc.views.download_csv_transport_infrastructure
   seshat.apps.sc.views.drinking_water_supply_system_download
   seshat.apps.sc.views.drinking_water_supply_system_meta_download
   seshat.apps.sc.views.dynamic_create_view
   seshat.apps.sc.views.dynamic_detail_view
   seshat.apps.sc.views.dynamic_update_view
   seshat.apps.sc.views.examination_system_download
   seshat.apps.sc.views.examination_system_meta_download
   seshat.apps.sc.views.fiction_download
   seshat.apps.sc.views.fiction_meta_download
   seshat.apps.sc.views.food_storage_site_download
   seshat.apps.sc.views.food_storage_site_meta_download
   seshat.apps.sc.views.foreign_coin_download
   seshat.apps.sc.views.foreign_coin_meta_download
   seshat.apps.sc.views.formal_legal_code_download
   seshat.apps.sc.views.formal_legal_code_meta_download
   seshat.apps.sc.views.full_time_bureaucrat_download
   seshat.apps.sc.views.full_time_bureaucrat_meta_download
   seshat.apps.sc.views.general_postal_service_download
   seshat.apps.sc.views.general_postal_service_meta_download
   seshat.apps.sc.views.generic_download
   seshat.apps.sc.views.generic_list_view
   seshat.apps.sc.views.generic_metadata_download
   seshat.apps.sc.views.has_add_capital_permission
   seshat.apps.sc.views.history_download
   seshat.apps.sc.views.history_meta_download
   seshat.apps.sc.views.indigenous_coin_download
   seshat.apps.sc.views.indigenous_coin_meta_download
   seshat.apps.sc.views.irrigation_system_download
   seshat.apps.sc.views.irrigation_system_meta_download
   seshat.apps.sc.views.judge_download
   seshat.apps.sc.views.judge_meta_download
   seshat.apps.sc.views.lists_tables_and_classification_download
   seshat.apps.sc.views.lists_tables_and_classification_meta_download
   seshat.apps.sc.views.market_download
   seshat.apps.sc.views.market_meta_download
   seshat.apps.sc.views.merit_promotion_download
   seshat.apps.sc.views.merit_promotion_meta_download
   seshat.apps.sc.views.military_level_download
   seshat.apps.sc.views.military_level_meta_download
   seshat.apps.sc.views.mines_or_quarry_download
   seshat.apps.sc.views.mines_or_quarry_meta_download
   seshat.apps.sc.views.mnemonic_device_download
   seshat.apps.sc.views.mnemonic_device_meta_download
   seshat.apps.sc.views.non_phonetic_writing_download
   seshat.apps.sc.views.non_phonetic_writing_meta_download
   seshat.apps.sc.views.nonwritten_record_download
   seshat.apps.sc.views.nonwritten_record_meta_download
   seshat.apps.sc.views.paper_currency_download
   seshat.apps.sc.views.paper_currency_meta_download
   seshat.apps.sc.views.philosophy_download
   seshat.apps.sc.views.philosophy_meta_download
   seshat.apps.sc.views.phonetic_alphabetic_writing_download
   seshat.apps.sc.views.phonetic_alphabetic_writing_meta_download
   seshat.apps.sc.views.polity_population_download
   seshat.apps.sc.views.polity_population_meta_download
   seshat.apps.sc.views.polity_territory_download
   seshat.apps.sc.views.polity_territory_meta_download
   seshat.apps.sc.views.population_of_the_largest_settlement_download
   seshat.apps.sc.views.population_of_the_largest_settlement_meta_download
   seshat.apps.sc.views.port_download
   seshat.apps.sc.views.port_meta_download
   seshat.apps.sc.views.postal_station_download
   seshat.apps.sc.views.postal_station_meta_download
   seshat.apps.sc.views.practical_literature_download
   seshat.apps.sc.views.practical_literature_meta_download
   seshat.apps.sc.views.precious_metal_download
   seshat.apps.sc.views.precious_metal_meta_download
   seshat.apps.sc.views.professional_lawyer_download
   seshat.apps.sc.views.professional_lawyer_meta_download
   seshat.apps.sc.views.professional_military_officer_download
   seshat.apps.sc.views.professional_military_officer_meta_download
   seshat.apps.sc.views.professional_priesthood_download
   seshat.apps.sc.views.professional_priesthood_meta_download
   seshat.apps.sc.views.professional_soldier_download
   seshat.apps.sc.views.professional_soldier_meta_download
   seshat.apps.sc.views.ra_download
   seshat.apps.sc.views.ra_meta_download
   seshat.apps.sc.views.religious_level_download
   seshat.apps.sc.views.religious_level_meta_download
   seshat.apps.sc.views.religious_literature_download
   seshat.apps.sc.views.religious_literature_meta_download
   seshat.apps.sc.views.road_download
   seshat.apps.sc.views.road_meta_download
   seshat.apps.sc.views.sacred_text_download
   seshat.apps.sc.views.sacred_text_meta_download
   seshat.apps.sc.views.scientific_literature_download
   seshat.apps.sc.views.scientific_literature_meta_download
   seshat.apps.sc.views.script_download
   seshat.apps.sc.views.script_meta_download
   seshat.apps.sc.views.scvars
   seshat.apps.sc.views.settlement_hierarchy_download
   seshat.apps.sc.views.settlement_hierarchy_meta_download
   seshat.apps.sc.views.show_problematic_sc_data_table
   seshat.apps.sc.views.specialized_government_building_download
   seshat.apps.sc.views.specialized_government_building_meta_download
   seshat.apps.sc.views.token_download
   seshat.apps.sc.views.token_meta_download
   seshat.apps.sc.views.written_record_download
   seshat.apps.sc.views.written_record_meta_download


Module Contents
---------------

.. py:class:: Administrative_levelCreate

   Bases: :py:obj:`django.contrib.auth.mixins.PermissionRequiredMixin`, :py:obj:`seshat.apps.general.mixins.PolityIdMixin`, :py:obj:`django.views.generic.edit.CreateView`


   .. note:: This view is restricted to users with the 'add_capital' permission.


   .. py:method:: get_absolute_url()

      Get the absolute URL of the view.

      :returns: The absolute URL of the view.
      :rtype: str



   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:attribute:: form_class


   .. py:attribute:: model


   .. py:attribute:: permission_required
      :value: 'core.add_capital'



   .. py:attribute:: template_name
      :value: 'sc/administrative_level/administrative_level_form.html'



.. py:class:: Administrative_levelDelete

   Bases: :py:obj:`django.contrib.auth.mixins.PermissionRequiredMixin`, :py:obj:`django.views.generic.edit.DeleteView`


   View for deleting an existing Administrative_level object.

   .. note:: This view is restricted to users with the 'add_capital' permission.


   .. py:attribute:: model


   .. py:attribute:: permission_required
      :value: 'core.add_capital'



   .. py:attribute:: success_url


   .. py:attribute:: template_name
      :value: 'core/delete_general.html'



.. py:class:: Administrative_levelDetailView

   Bases: :py:obj:`django.views.generic.DetailView`


   



   .. py:attribute:: model


   .. py:attribute:: template_name
      :value: 'sc/administrative_level/administrative_level_detail.html'



.. py:class:: Administrative_levelListView

   Bases: :py:obj:`django.views.generic.ListView`


   Paginated view for listing all the Administrative_level objects.


   .. py:method:: get_absolute_url()

      Get the absolute URL of the view.

      :returns: The absolute URL of the view.
      :rtype: str



   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:attribute:: model


   .. py:attribute:: paginate_by
      :value: 10



   .. py:attribute:: template_name
      :value: 'sc/administrative_level/administrative_level_list.html'



.. py:class:: Administrative_levelListViewAll

   Bases: :py:obj:`django.views.generic.ListView`


   



   .. py:method:: get_absolute_url()

      Get the absolute URL of the view.

      :returns: The absolute URL of the view.
      :rtype: str



   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:method:: get_queryset()


   .. py:attribute:: model


   .. py:attribute:: template_name
      :value: 'sc/administrative_level/administrative_level_list_all.html'



.. py:class:: Administrative_levelUpdate

   Bases: :py:obj:`django.contrib.auth.mixins.PermissionRequiredMixin`, :py:obj:`django.views.generic.edit.UpdateView`


   .. note:: This view is restricted to users with the 'add_capital' permission.


   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:attribute:: form_class


   .. py:attribute:: model


   .. py:attribute:: permission_required
      :value: 'core.add_capital'



   .. py:attribute:: template_name
      :value: 'sc/administrative_level/administrative_level_update.html'



.. py:class:: ArticleCreate

   Bases: :py:obj:`django.contrib.auth.mixins.PermissionRequiredMixin`, :py:obj:`seshat.apps.general.mixins.PolityIdMixin`, :py:obj:`django.views.generic.edit.CreateView`


   .. note:: This view is restricted to users with the 'add_capital' permission.


   .. py:method:: get_absolute_url()

      Get the absolute URL of the view.

      :returns: The absolute URL of the view.
      :rtype: str



   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:attribute:: form_class


   .. py:attribute:: model


   .. py:attribute:: permission_required
      :value: 'core.add_capital'



   .. py:attribute:: template_name
      :value: 'sc/article/article_form.html'



.. py:class:: ArticleDelete

   Bases: :py:obj:`django.contrib.auth.mixins.PermissionRequiredMixin`, :py:obj:`django.views.generic.edit.DeleteView`


   View for deleting an existing Article object.

   .. note:: This view is restricted to users with the 'add_capital' permission.


   .. py:attribute:: model


   .. py:attribute:: permission_required
      :value: 'core.add_capital'



   .. py:attribute:: success_url


   .. py:attribute:: template_name
      :value: 'core/delete_general.html'



.. py:class:: ArticleDetailView

   Bases: :py:obj:`django.views.generic.DetailView`


   



   .. py:attribute:: model


   .. py:attribute:: template_name
      :value: 'sc/article/article_detail.html'



.. py:class:: ArticleListView

   Bases: :py:obj:`django.views.generic.ListView`


   Paginated view for listing all the Article objects.


   .. py:method:: get_absolute_url()

      Get the absolute URL of the view.

      :returns: The absolute URL of the view.
      :rtype: str



   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:attribute:: model


   .. py:attribute:: paginate_by
      :value: 10



   .. py:attribute:: template_name
      :value: 'sc/article/article_list.html'



.. py:class:: ArticleListViewAll

   Bases: :py:obj:`django.views.generic.ListView`


   



   .. py:method:: get_absolute_url()

      Get the absolute URL of the view.

      :returns: The absolute URL of the view.
      :rtype: str



   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:method:: get_queryset()


   .. py:attribute:: model


   .. py:attribute:: template_name
      :value: 'sc/article/article_list_all.html'



.. py:class:: ArticleUpdate

   Bases: :py:obj:`django.contrib.auth.mixins.PermissionRequiredMixin`, :py:obj:`django.views.generic.edit.UpdateView`


   .. note:: This view is restricted to users with the 'add_capital' permission.


   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:attribute:: form_class


   .. py:attribute:: model


   .. py:attribute:: permission_required
      :value: 'core.add_capital'



   .. py:attribute:: template_name
      :value: 'sc/article/article_update.html'



.. py:class:: BridgeCreate

   Bases: :py:obj:`django.contrib.auth.mixins.PermissionRequiredMixin`, :py:obj:`seshat.apps.general.mixins.PolityIdMixin`, :py:obj:`django.views.generic.edit.CreateView`


   .. note:: This view is restricted to users with the 'add_capital' permission.


   .. py:method:: get_absolute_url()

      Get the absolute URL of the view.

      :returns: The absolute URL of the view.
      :rtype: str



   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:attribute:: form_class


   .. py:attribute:: model


   .. py:attribute:: permission_required
      :value: 'core.add_capital'



   .. py:attribute:: template_name
      :value: 'sc/bridge/bridge_form.html'



.. py:class:: BridgeDelete

   Bases: :py:obj:`django.contrib.auth.mixins.PermissionRequiredMixin`, :py:obj:`django.views.generic.edit.DeleteView`


   View for deleting an existing Bridge object.

   .. note:: This view is restricted to users with the 'add_capital' permission.


   .. py:attribute:: model


   .. py:attribute:: permission_required
      :value: 'core.add_capital'



   .. py:attribute:: success_url


   .. py:attribute:: template_name
      :value: 'core/delete_general.html'



.. py:class:: BridgeDetailView

   Bases: :py:obj:`django.views.generic.DetailView`


   



   .. py:attribute:: model


   .. py:attribute:: template_name
      :value: 'sc/bridge/bridge_detail.html'



.. py:class:: BridgeListView

   Bases: :py:obj:`django.views.generic.ListView`


   Paginated view for listing all the Bridge objects.


   .. py:method:: get_absolute_url()

      Get the absolute URL of the view.

      :returns: The absolute URL of the view.
      :rtype: str



   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:attribute:: model


   .. py:attribute:: paginate_by
      :value: 10



   .. py:attribute:: template_name
      :value: 'sc/bridge/bridge_list.html'



.. py:class:: BridgeListViewAll

   Bases: :py:obj:`django.views.generic.ListView`


   



   .. py:method:: get_absolute_url()

      Get the absolute URL of the view.

      :returns: The absolute URL of the view.
      :rtype: str



   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:method:: get_queryset()


   .. py:attribute:: model


   .. py:attribute:: template_name
      :value: 'sc/bridge/bridge_list_all.html'



.. py:class:: BridgeUpdate

   Bases: :py:obj:`django.contrib.auth.mixins.PermissionRequiredMixin`, :py:obj:`django.views.generic.edit.UpdateView`


   .. note:: This view is restricted to users with the 'add_capital' permission.


   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:attribute:: form_class


   .. py:attribute:: model


   .. py:attribute:: permission_required
      :value: 'core.add_capital'



   .. py:attribute:: template_name
      :value: 'sc/bridge/bridge_update.html'



.. py:class:: CalendarCreate

   Bases: :py:obj:`django.contrib.auth.mixins.PermissionRequiredMixin`, :py:obj:`seshat.apps.general.mixins.PolityIdMixin`, :py:obj:`django.views.generic.edit.CreateView`


   .. note:: This view is restricted to users with the 'add_capital' permission.


   .. py:method:: get_absolute_url()

      Get the absolute URL of the view.

      :returns: The absolute URL of the view.
      :rtype: str



   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:attribute:: form_class


   .. py:attribute:: model


   .. py:attribute:: permission_required
      :value: 'core.add_capital'



   .. py:attribute:: template_name
      :value: 'sc/calendar/calendar_form.html'



.. py:class:: CalendarDelete

   Bases: :py:obj:`django.contrib.auth.mixins.PermissionRequiredMixin`, :py:obj:`django.views.generic.edit.DeleteView`


   View for deleting an existing Calendar object.

   .. note:: This view is restricted to users with the 'add_capital' permission.


   .. py:attribute:: model


   .. py:attribute:: permission_required
      :value: 'core.add_capital'



   .. py:attribute:: success_url


   .. py:attribute:: template_name
      :value: 'core/delete_general.html'



.. py:class:: CalendarDetailView

   Bases: :py:obj:`django.views.generic.DetailView`


   



   .. py:attribute:: model


   .. py:attribute:: template_name
      :value: 'sc/calendar/calendar_detail.html'



.. py:class:: CalendarListView

   Bases: :py:obj:`django.views.generic.ListView`


   Paginated view for listing all the Calendar objects.


   .. py:method:: get_absolute_url()

      Get the absolute URL of the view.

      :returns: The absolute URL of the view.
      :rtype: str



   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:attribute:: model


   .. py:attribute:: paginate_by
      :value: 10



   .. py:attribute:: template_name
      :value: 'sc/calendar/calendar_list.html'



.. py:class:: CalendarListViewAll

   Bases: :py:obj:`django.views.generic.ListView`


   



   .. py:method:: get_absolute_url()

      Get the absolute URL of the view.

      :returns: The absolute URL of the view.
      :rtype: str



   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:method:: get_queryset()


   .. py:attribute:: model


   .. py:attribute:: template_name
      :value: 'sc/calendar/calendar_list_all.html'



.. py:class:: CalendarUpdate

   Bases: :py:obj:`django.contrib.auth.mixins.PermissionRequiredMixin`, :py:obj:`django.views.generic.edit.UpdateView`


   .. note:: This view is restricted to users with the 'add_capital' permission.


   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:attribute:: form_class


   .. py:attribute:: model


   .. py:attribute:: permission_required
      :value: 'core.add_capital'



   .. py:attribute:: template_name
      :value: 'sc/calendar/calendar_update.html'



.. py:class:: CanalCreate

   Bases: :py:obj:`django.contrib.auth.mixins.PermissionRequiredMixin`, :py:obj:`seshat.apps.general.mixins.PolityIdMixin`, :py:obj:`django.views.generic.edit.CreateView`


   .. note:: This view is restricted to users with the 'add_capital' permission.


   .. py:method:: get_absolute_url()

      Get the absolute URL of the view.

      :returns: The absolute URL of the view.
      :rtype: str



   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:attribute:: form_class


   .. py:attribute:: model


   .. py:attribute:: permission_required
      :value: 'core.add_capital'



   .. py:attribute:: template_name
      :value: 'sc/canal/canal_form.html'



.. py:class:: CanalDelete

   Bases: :py:obj:`django.contrib.auth.mixins.PermissionRequiredMixin`, :py:obj:`django.views.generic.edit.DeleteView`


   View for deleting an existing Canal object.

   .. note:: This view is restricted to users with the 'add_capital' permission.


   .. py:attribute:: model


   .. py:attribute:: permission_required
      :value: 'core.add_capital'



   .. py:attribute:: success_url


   .. py:attribute:: template_name
      :value: 'core/delete_general.html'



.. py:class:: CanalDetailView

   Bases: :py:obj:`django.views.generic.DetailView`


   



   .. py:attribute:: model


   .. py:attribute:: template_name
      :value: 'sc/canal/canal_detail.html'



.. py:class:: CanalListView

   Bases: :py:obj:`django.views.generic.ListView`


   Paginated view for listing all the Canal objects.


   .. py:method:: get_absolute_url()

      Get the absolute URL of the view.

      :returns: The absolute URL of the view.
      :rtype: str



   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:attribute:: model


   .. py:attribute:: paginate_by
      :value: 10



   .. py:attribute:: template_name
      :value: 'sc/canal/canal_list.html'



.. py:class:: CanalListViewAll

   Bases: :py:obj:`django.views.generic.ListView`


   



   .. py:method:: get_absolute_url()

      Get the absolute URL of the view.

      :returns: The absolute URL of the view.
      :rtype: str



   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:method:: get_queryset()


   .. py:attribute:: model


   .. py:attribute:: template_name
      :value: 'sc/canal/canal_list_all.html'



.. py:class:: CanalUpdate

   Bases: :py:obj:`django.contrib.auth.mixins.PermissionRequiredMixin`, :py:obj:`django.views.generic.edit.UpdateView`


   .. note:: This view is restricted to users with the 'add_capital' permission.


   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:attribute:: form_class


   .. py:attribute:: model


   .. py:attribute:: permission_required
      :value: 'core.add_capital'



   .. py:attribute:: template_name
      :value: 'sc/canal/canal_update.html'



.. py:class:: CourierCreate

   Bases: :py:obj:`django.contrib.auth.mixins.PermissionRequiredMixin`, :py:obj:`seshat.apps.general.mixins.PolityIdMixin`, :py:obj:`django.views.generic.edit.CreateView`


   .. note:: This view is restricted to users with the 'add_capital' permission.


   .. py:method:: get_absolute_url()

      Get the absolute URL of the view.

      :returns: The absolute URL of the view.
      :rtype: str



   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:attribute:: form_class


   .. py:attribute:: model


   .. py:attribute:: permission_required
      :value: 'core.add_capital'



   .. py:attribute:: template_name
      :value: 'sc/courier/courier_form.html'



.. py:class:: CourierDelete

   Bases: :py:obj:`django.contrib.auth.mixins.PermissionRequiredMixin`, :py:obj:`django.views.generic.edit.DeleteView`


   View for deleting an existing Courier object.

   .. note:: This view is restricted to users with the 'add_capital' permission.


   .. py:attribute:: model


   .. py:attribute:: permission_required
      :value: 'core.add_capital'



   .. py:attribute:: success_url


   .. py:attribute:: template_name
      :value: 'core/delete_general.html'



.. py:class:: CourierDetailView

   Bases: :py:obj:`django.views.generic.DetailView`


   



   .. py:attribute:: model


   .. py:attribute:: template_name
      :value: 'sc/courier/courier_detail.html'



.. py:class:: CourierListView

   Bases: :py:obj:`django.views.generic.ListView`


   Paginated view for listing all the Courier objects.


   .. py:method:: get_absolute_url()

      Get the absolute URL of the view.

      :returns: The absolute URL of the view.
      :rtype: str



   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:attribute:: model


   .. py:attribute:: paginate_by
      :value: 10



   .. py:attribute:: template_name
      :value: 'sc/courier/courier_list.html'



.. py:class:: CourierListViewAll

   Bases: :py:obj:`django.views.generic.ListView`


   



   .. py:method:: get_absolute_url()

      Get the absolute URL of the view.

      :returns: The absolute URL of the view.
      :rtype: str



   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:method:: get_queryset()


   .. py:attribute:: model


   .. py:attribute:: template_name
      :value: 'sc/courier/courier_list_all.html'



.. py:class:: CourierUpdate

   Bases: :py:obj:`django.contrib.auth.mixins.PermissionRequiredMixin`, :py:obj:`django.views.generic.edit.UpdateView`


   .. note:: This view is restricted to users with the 'add_capital' permission.


   .. py:method:: get_context_data(**kwargs)


   .. py:attribute:: form_class


   .. py:attribute:: model


   .. py:attribute:: permission_required
      :value: 'core.add_capital'



   .. py:attribute:: template_name
      :value: 'sc/courier/courier_update.html'



.. py:class:: CourtCreate

   Bases: :py:obj:`django.contrib.auth.mixins.PermissionRequiredMixin`, :py:obj:`seshat.apps.general.mixins.PolityIdMixin`, :py:obj:`django.views.generic.edit.CreateView`


   .. note:: This view is restricted to users with the 'add_capital' permission.


   .. py:method:: get_absolute_url()

      Get the absolute URL of the view.

      :returns: The absolute URL of the view.
      :rtype: str



   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:attribute:: form_class


   .. py:attribute:: model


   .. py:attribute:: permission_required
      :value: 'core.add_capital'



   .. py:attribute:: template_name
      :value: 'sc/court/court_form.html'



.. py:class:: CourtDelete

   Bases: :py:obj:`django.contrib.auth.mixins.PermissionRequiredMixin`, :py:obj:`django.views.generic.edit.DeleteView`


   View for deleting an existing Court object.

   .. note:: This view is restricted to users with the 'add_capital' permission.


   .. py:attribute:: model


   .. py:attribute:: permission_required
      :value: 'core.add_capital'



   .. py:attribute:: success_url


   .. py:attribute:: template_name
      :value: 'core/delete_general.html'



.. py:class:: CourtDetailView

   Bases: :py:obj:`django.views.generic.DetailView`


   



   .. py:attribute:: model


   .. py:attribute:: template_name
      :value: 'sc/court/court_detail.html'



.. py:class:: CourtListView

   Bases: :py:obj:`django.views.generic.ListView`


   Paginated view for listing all the Court objects.


   .. py:method:: get_absolute_url()

      Get the absolute URL of the view.

      :returns: The absolute URL of the view.
      :rtype: str



   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:attribute:: model


   .. py:attribute:: paginate_by
      :value: 10



   .. py:attribute:: template_name
      :value: 'sc/court/court_list.html'



.. py:class:: CourtListViewAll

   Bases: :py:obj:`django.views.generic.ListView`


   



   .. py:method:: get_absolute_url()

      Get the absolute URL of the view.

      :returns: The absolute URL of the view.
      :rtype: str



   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:method:: get_queryset()


   .. py:attribute:: model


   .. py:attribute:: template_name
      :value: 'sc/court/court_list_all.html'



.. py:class:: CourtUpdate

   Bases: :py:obj:`django.contrib.auth.mixins.PermissionRequiredMixin`, :py:obj:`django.views.generic.edit.UpdateView`


   .. note:: This view is restricted to users with the 'add_capital' permission.


   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:attribute:: form_class


   .. py:attribute:: model


   .. py:attribute:: permission_required
      :value: 'core.add_capital'



   .. py:attribute:: template_name
      :value: 'sc/court/court_update.html'



.. py:class:: Drinking_water_supply_systemCreate

   Bases: :py:obj:`django.contrib.auth.mixins.PermissionRequiredMixin`, :py:obj:`seshat.apps.general.mixins.PolityIdMixin`, :py:obj:`django.views.generic.edit.CreateView`


   .. note:: This view is restricted to users with the 'add_capital' permission.


   .. py:method:: get_absolute_url()

      Get the absolute URL of the view.

      :returns: The absolute URL of the view.
      :rtype: str



   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:attribute:: form_class


   .. py:attribute:: model


   .. py:attribute:: permission_required
      :value: 'core.add_capital'



   .. py:attribute:: template_name
      :value: 'sc/drinking_water_supply_system/drinking_water_supply_system_form.html'



.. py:class:: Drinking_water_supply_systemDelete

   Bases: :py:obj:`django.contrib.auth.mixins.PermissionRequiredMixin`, :py:obj:`django.views.generic.edit.DeleteView`


   View for deleting an existing Drinking_water_supply_system object.

   .. note:: This view is restricted to users with the 'add_capital' permission.


   .. py:attribute:: model


   .. py:attribute:: permission_required
      :value: 'core.add_capital'



   .. py:attribute:: success_url


   .. py:attribute:: template_name
      :value: 'core/delete_general.html'



.. py:class:: Drinking_water_supply_systemDetailView

   Bases: :py:obj:`django.views.generic.DetailView`


   



   .. py:attribute:: model


   .. py:attribute:: template_name
      :value: 'sc/drinking_water_supply_system/drinking_water_supply_system_detail.html'



.. py:class:: Drinking_water_supply_systemListView

   Bases: :py:obj:`django.views.generic.ListView`


   Paginated view for listing all the Drinking_water_supply_system objects.


   .. py:method:: get_absolute_url()

      Get the absolute URL of the view.

      :returns: The absolute URL of the view.
      :rtype: str



   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:attribute:: model


   .. py:attribute:: paginate_by
      :value: 10



   .. py:attribute:: template_name
      :value: 'sc/drinking_water_supply_system/drinking_water_supply_system_list.html'



.. py:class:: Drinking_water_supply_systemListViewAll

   Bases: :py:obj:`django.views.generic.ListView`


   



   .. py:method:: get_absolute_url()

      Get the absolute URL of the view.

      :returns: The absolute URL of the view.
      :rtype: str



   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:method:: get_queryset()


   .. py:attribute:: model


   .. py:attribute:: template_name
      :value: 'sc/drinking_water_supply_system/drinking_water_supply_system_list_all.html'



.. py:class:: Drinking_water_supply_systemUpdate

   Bases: :py:obj:`django.contrib.auth.mixins.PermissionRequiredMixin`, :py:obj:`django.views.generic.edit.UpdateView`


   .. note:: This view is restricted to users with the 'add_capital' permission.


   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:attribute:: form_class


   .. py:attribute:: model


   .. py:attribute:: permission_required
      :value: 'core.add_capital'



   .. py:attribute:: template_name
      :value: 'sc/drinking_water_supply_system/drinking_water_supply_system_update.html'



.. py:class:: Examination_systemCreate

   Bases: :py:obj:`django.contrib.auth.mixins.PermissionRequiredMixin`, :py:obj:`seshat.apps.general.mixins.PolityIdMixin`, :py:obj:`django.views.generic.edit.CreateView`


   .. note:: This view is restricted to users with the 'add_capital' permission.


   .. py:method:: get_absolute_url()

      Get the absolute URL of the view.

      :returns: The absolute URL of the view.
      :rtype: str



   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:attribute:: form_class


   .. py:attribute:: model


   .. py:attribute:: permission_required
      :value: 'core.add_capital'



   .. py:attribute:: template_name
      :value: 'sc/examination_system/examination_system_form.html'



.. py:class:: Examination_systemDelete

   Bases: :py:obj:`django.contrib.auth.mixins.PermissionRequiredMixin`, :py:obj:`django.views.generic.edit.DeleteView`


   View for deleting an existing Examination_system object.

   .. note:: This view is restricted to users with the 'add_capital' permission.


   .. py:attribute:: model


   .. py:attribute:: permission_required
      :value: 'core.add_capital'



   .. py:attribute:: success_url


   .. py:attribute:: template_name
      :value: 'core/delete_general.html'



.. py:class:: Examination_systemDetailView

   Bases: :py:obj:`django.views.generic.DetailView`


   



   .. py:attribute:: model


   .. py:attribute:: template_name
      :value: 'sc/examination_system/examination_system_detail.html'



.. py:class:: Examination_systemListView

   Bases: :py:obj:`django.views.generic.ListView`


   Paginated view for listing all the Examination_system objects.


   .. py:method:: get_absolute_url()

      Get the absolute URL of the view.

      :returns: The absolute URL of the view.
      :rtype: str



   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:attribute:: model


   .. py:attribute:: paginate_by
      :value: 10



   .. py:attribute:: template_name
      :value: 'sc/examination_system/examination_system_list.html'



.. py:class:: Examination_systemListViewAll

   Bases: :py:obj:`django.views.generic.ListView`


   



   .. py:method:: get_absolute_url()

      Get the absolute URL of the view.

      :returns: The absolute URL of the view.
      :rtype: str



   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:method:: get_queryset()


   .. py:attribute:: model


   .. py:attribute:: template_name
      :value: 'sc/examination_system/examination_system_list_all.html'



.. py:class:: Examination_systemUpdate

   Bases: :py:obj:`django.contrib.auth.mixins.PermissionRequiredMixin`, :py:obj:`django.views.generic.edit.UpdateView`


   .. note:: This view is restricted to users with the 'add_capital' permission.


   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:attribute:: form_class


   .. py:attribute:: model


   .. py:attribute:: permission_required
      :value: 'core.add_capital'



   .. py:attribute:: template_name
      :value: 'sc/examination_system/examination_system_update.html'



.. py:class:: FictionCreate

   Bases: :py:obj:`django.contrib.auth.mixins.PermissionRequiredMixin`, :py:obj:`seshat.apps.general.mixins.PolityIdMixin`, :py:obj:`django.views.generic.edit.CreateView`


   .. note:: This view is restricted to users with the 'add_capital' permission.


   .. py:method:: get_absolute_url()

      Get the absolute URL of the view.

      :returns: The absolute URL of the view.
      :rtype: str



   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:attribute:: form_class


   .. py:attribute:: model


   .. py:attribute:: permission_required
      :value: 'core.add_capital'



   .. py:attribute:: template_name
      :value: 'sc/fiction/fiction_form.html'



.. py:class:: FictionDelete

   Bases: :py:obj:`django.contrib.auth.mixins.PermissionRequiredMixin`, :py:obj:`django.views.generic.edit.DeleteView`


   View for deleting an existing Fiction object.

   .. note:: This view is restricted to users with the 'add_capital' permission.


   .. py:attribute:: model


   .. py:attribute:: permission_required
      :value: 'core.add_capital'



   .. py:attribute:: success_url


   .. py:attribute:: template_name
      :value: 'core/delete_general.html'



.. py:class:: FictionDetailView

   Bases: :py:obj:`django.views.generic.DetailView`


   



   .. py:attribute:: model


   .. py:attribute:: template_name
      :value: 'sc/fiction/fiction_detail.html'



.. py:class:: FictionListView

   Bases: :py:obj:`django.views.generic.ListView`


   Paginated view for listing all the Fiction objects.


   .. py:method:: get_absolute_url()

      Get the absolute URL of the view.

      :returns: The absolute URL of the view.
      :rtype: str



   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:attribute:: model


   .. py:attribute:: paginate_by
      :value: 10



   .. py:attribute:: template_name
      :value: 'sc/fiction/fiction_list.html'



.. py:class:: FictionListViewAll

   Bases: :py:obj:`django.views.generic.ListView`


   



   .. py:method:: get_absolute_url()

      Get the absolute URL of the view.

      :returns: The absolute URL of the view.
      :rtype: str



   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:method:: get_queryset()


   .. py:attribute:: model


   .. py:attribute:: template_name
      :value: 'sc/fiction/fiction_list_all.html'



.. py:class:: FictionUpdate

   Bases: :py:obj:`django.contrib.auth.mixins.PermissionRequiredMixin`, :py:obj:`django.views.generic.edit.UpdateView`


   .. note:: This view is restricted to users with the 'add_capital' permission.


   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:attribute:: form_class


   .. py:attribute:: model


   .. py:attribute:: permission_required
      :value: 'core.add_capital'



   .. py:attribute:: template_name
      :value: 'sc/fiction/fiction_update.html'



.. py:class:: Food_storage_siteCreate

   Bases: :py:obj:`django.contrib.auth.mixins.PermissionRequiredMixin`, :py:obj:`seshat.apps.general.mixins.PolityIdMixin`, :py:obj:`django.views.generic.edit.CreateView`


   .. note:: This view is restricted to users with the 'add_capital' permission.


   .. py:method:: get_absolute_url()

      Get the absolute URL of the view.

      :returns: The absolute URL of the view.
      :rtype: str



   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:attribute:: form_class


   .. py:attribute:: model


   .. py:attribute:: permission_required
      :value: 'core.add_capital'



   .. py:attribute:: template_name
      :value: 'sc/food_storage_site/food_storage_site_form.html'



.. py:class:: Food_storage_siteDelete

   Bases: :py:obj:`django.contrib.auth.mixins.PermissionRequiredMixin`, :py:obj:`django.views.generic.edit.DeleteView`


   View for deleting an existing Food_storage_site object.

   .. note:: This view is restricted to users with the 'add_capital' permission.


   .. py:attribute:: model


   .. py:attribute:: permission_required
      :value: 'core.add_capital'



   .. py:attribute:: success_url


   .. py:attribute:: template_name
      :value: 'core/delete_general.html'



.. py:class:: Food_storage_siteDetailView

   Bases: :py:obj:`django.views.generic.DetailView`


   



   .. py:attribute:: model


   .. py:attribute:: template_name
      :value: 'sc/food_storage_site/food_storage_site_detail.html'



.. py:class:: Food_storage_siteListView

   Bases: :py:obj:`django.views.generic.ListView`


   Paginated view for listing all the Food_storage_site objects.


   .. py:method:: get_absolute_url()

      Get the absolute URL of the view.

      :returns: The absolute URL of the view.
      :rtype: str



   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:attribute:: model


   .. py:attribute:: paginate_by
      :value: 10



   .. py:attribute:: template_name
      :value: 'sc/food_storage_site/food_storage_site_list.html'



.. py:class:: Food_storage_siteListViewAll

   Bases: :py:obj:`django.views.generic.ListView`


   



   .. py:method:: get_absolute_url()

      Get the absolute URL of the view.

      :returns: The absolute URL of the view.
      :rtype: str



   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:method:: get_queryset()


   .. py:attribute:: model


   .. py:attribute:: template_name
      :value: 'sc/food_storage_site/food_storage_site_list_all.html'



.. py:class:: Food_storage_siteUpdate

   Bases: :py:obj:`django.contrib.auth.mixins.PermissionRequiredMixin`, :py:obj:`django.views.generic.edit.UpdateView`


   .. note:: This view is restricted to users with the 'add_capital' permission.


   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:attribute:: form_class


   .. py:attribute:: model


   .. py:attribute:: permission_required
      :value: 'core.add_capital'



   .. py:attribute:: template_name
      :value: 'sc/food_storage_site/food_storage_site_update.html'



.. py:class:: Foreign_coinCreate

   Bases: :py:obj:`django.contrib.auth.mixins.PermissionRequiredMixin`, :py:obj:`seshat.apps.general.mixins.PolityIdMixin`, :py:obj:`django.views.generic.edit.CreateView`


   .. note:: This view is restricted to users with the 'add_capital' permission.


   .. py:method:: get_absolute_url()

      Get the absolute URL of the view.

      :returns: The absolute URL of the view.
      :rtype: str



   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:attribute:: form_class


   .. py:attribute:: model


   .. py:attribute:: permission_required
      :value: 'core.add_capital'



   .. py:attribute:: template_name
      :value: 'sc/foreign_coin/foreign_coin_form.html'



.. py:class:: Foreign_coinDelete

   Bases: :py:obj:`django.contrib.auth.mixins.PermissionRequiredMixin`, :py:obj:`django.views.generic.edit.DeleteView`


   View for deleting an existing Foreign_coin object.

   .. note:: This view is restricted to users with the 'add_capital' permission.


   .. py:attribute:: model


   .. py:attribute:: permission_required
      :value: 'core.add_capital'



   .. py:attribute:: success_url


   .. py:attribute:: template_name
      :value: 'core/delete_general.html'



.. py:class:: Foreign_coinDetailView

   Bases: :py:obj:`django.views.generic.DetailView`


   



   .. py:attribute:: model


   .. py:attribute:: template_name
      :value: 'sc/foreign_coin/foreign_coin_detail.html'



.. py:class:: Foreign_coinListView

   Bases: :py:obj:`django.views.generic.ListView`


   Paginated view for listing all the Foreign_coin objects.


   .. py:method:: get_absolute_url()

      Get the absolute URL of the view.

      :returns: The absolute URL of the view.
      :rtype: str



   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:attribute:: model


   .. py:attribute:: paginate_by
      :value: 10



   .. py:attribute:: template_name
      :value: 'sc/foreign_coin/foreign_coin_list.html'



.. py:class:: Foreign_coinListViewAll

   Bases: :py:obj:`django.views.generic.ListView`


   



   .. py:method:: get_absolute_url()

      Get the absolute URL of the view.

      :returns: The absolute URL of the view.
      :rtype: str



   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:method:: get_queryset()


   .. py:attribute:: model


   .. py:attribute:: template_name
      :value: 'sc/foreign_coin/foreign_coin_list_all.html'



.. py:class:: Foreign_coinUpdate

   Bases: :py:obj:`django.contrib.auth.mixins.PermissionRequiredMixin`, :py:obj:`django.views.generic.edit.UpdateView`


   .. note:: This view is restricted to users with the 'add_capital' permission.


   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:attribute:: form_class


   .. py:attribute:: model


   .. py:attribute:: permission_required
      :value: 'core.add_capital'



   .. py:attribute:: template_name
      :value: 'sc/foreign_coin/foreign_coin_update.html'



.. py:class:: Formal_legal_codeCreate

   Bases: :py:obj:`django.contrib.auth.mixins.PermissionRequiredMixin`, :py:obj:`seshat.apps.general.mixins.PolityIdMixin`, :py:obj:`django.views.generic.edit.CreateView`


   .. note:: This view is restricted to users with the 'add_capital' permission.


   .. py:method:: get_absolute_url()

      Get the absolute URL of the view.

      :returns: The absolute URL of the view.
      :rtype: str



   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:attribute:: form_class


   .. py:attribute:: model


   .. py:attribute:: permission_required
      :value: 'core.add_capital'



   .. py:attribute:: template_name
      :value: 'sc/formal_legal_code/formal_legal_code_form.html'



.. py:class:: Formal_legal_codeDelete

   Bases: :py:obj:`django.contrib.auth.mixins.PermissionRequiredMixin`, :py:obj:`django.views.generic.edit.DeleteView`


   View for deleting an existing Formal_legal_code object.

   .. note:: This view is restricted to users with the 'add_capital' permission.


   .. py:attribute:: model


   .. py:attribute:: permission_required
      :value: 'core.add_capital'



   .. py:attribute:: success_url


   .. py:attribute:: template_name
      :value: 'core/delete_general.html'



.. py:class:: Formal_legal_codeDetailView

   Bases: :py:obj:`django.views.generic.DetailView`


   



   .. py:attribute:: model


   .. py:attribute:: template_name
      :value: 'sc/formal_legal_code/formal_legal_code_detail.html'



.. py:class:: Formal_legal_codeListView

   Bases: :py:obj:`django.views.generic.ListView`


   Paginated view for listing all the Formal_legal_code objects.


   .. py:method:: get_absolute_url()

      Get the absolute URL of the view.

      :returns: The absolute URL of the view.
      :rtype: str



   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:attribute:: model


   .. py:attribute:: paginate_by
      :value: 10



   .. py:attribute:: template_name
      :value: 'sc/formal_legal_code/formal_legal_code_list.html'



.. py:class:: Formal_legal_codeListViewAll

   Bases: :py:obj:`django.views.generic.ListView`


   



   .. py:method:: get_absolute_url()

      Get the absolute URL of the view.

      :returns: The absolute URL of the view.
      :rtype: str



   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:method:: get_queryset()


   .. py:attribute:: model


   .. py:attribute:: template_name
      :value: 'sc/formal_legal_code/formal_legal_code_list_all.html'



.. py:class:: Formal_legal_codeUpdate

   Bases: :py:obj:`django.contrib.auth.mixins.PermissionRequiredMixin`, :py:obj:`django.views.generic.edit.UpdateView`


   .. note:: This view is restricted to users with the 'add_capital' permission.


   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:attribute:: form_class


   .. py:attribute:: model


   .. py:attribute:: permission_required
      :value: 'core.add_capital'



   .. py:attribute:: template_name
      :value: 'sc/formal_legal_code/formal_legal_code_update.html'



.. py:class:: Full_time_bureaucratCreate

   Bases: :py:obj:`django.contrib.auth.mixins.PermissionRequiredMixin`, :py:obj:`seshat.apps.general.mixins.PolityIdMixin`, :py:obj:`django.views.generic.edit.CreateView`


   .. note:: This view is restricted to users with the 'add_capital' permission.


   .. py:method:: get_absolute_url()

      Get the absolute URL of the view.

      :returns: The absolute URL of the view.
      :rtype: str



   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:attribute:: form_class


   .. py:attribute:: model


   .. py:attribute:: permission_required
      :value: 'core.add_capital'



   .. py:attribute:: template_name
      :value: 'sc/full_time_bureaucrat/full_time_bureaucrat_form.html'



.. py:class:: Full_time_bureaucratDelete

   Bases: :py:obj:`django.contrib.auth.mixins.PermissionRequiredMixin`, :py:obj:`django.views.generic.edit.DeleteView`


   View for deleting an existing Full_time_bureaucrat object.

   .. note:: This view is restricted to users with the 'add_capital' permission.


   .. py:attribute:: model


   .. py:attribute:: permission_required
      :value: 'core.add_capital'



   .. py:attribute:: success_url


   .. py:attribute:: template_name
      :value: 'core/delete_general.html'



.. py:class:: Full_time_bureaucratDetailView

   Bases: :py:obj:`django.views.generic.DetailView`


   



   .. py:attribute:: model


   .. py:attribute:: template_name
      :value: 'sc/full_time_bureaucrat/full_time_bureaucrat_detail.html'



.. py:class:: Full_time_bureaucratListView

   Bases: :py:obj:`django.views.generic.ListView`


   Paginated view for listing all the Full_time_bureaucrat objects.


   .. py:method:: get_absolute_url()

      Get the absolute URL of the view.

      :returns: The absolute URL of the view.
      :rtype: str



   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:attribute:: model


   .. py:attribute:: paginate_by
      :value: 10



   .. py:attribute:: template_name
      :value: 'sc/full_time_bureaucrat/full_time_bureaucrat_list.html'



.. py:class:: Full_time_bureaucratListViewAll

   Bases: :py:obj:`django.views.generic.ListView`


   



   .. py:method:: get_absolute_url()

      Get the absolute URL of the view.

      :returns: The absolute URL of the view.
      :rtype: str



   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:method:: get_queryset()


   .. py:attribute:: model


   .. py:attribute:: template_name
      :value: 'sc/full_time_bureaucrat/full_time_bureaucrat_list_all.html'



.. py:class:: Full_time_bureaucratUpdate

   Bases: :py:obj:`django.contrib.auth.mixins.PermissionRequiredMixin`, :py:obj:`django.views.generic.edit.UpdateView`


   .. note:: This view is restricted to users with the 'add_capital' permission.


   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:attribute:: form_class


   .. py:attribute:: model


   .. py:attribute:: permission_required
      :value: 'core.add_capital'



   .. py:attribute:: template_name
      :value: 'sc/full_time_bureaucrat/full_time_bureaucrat_update.html'



.. py:class:: General_postal_serviceCreate

   Bases: :py:obj:`django.contrib.auth.mixins.PermissionRequiredMixin`, :py:obj:`seshat.apps.general.mixins.PolityIdMixin`, :py:obj:`django.views.generic.edit.CreateView`


   .. note:: This view is restricted to users with the 'add_capital' permission.


   .. py:method:: get_absolute_url()

      Get the absolute URL of the view.

      :returns: The absolute URL of the view.
      :rtype: str



   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:attribute:: form_class


   .. py:attribute:: model


   .. py:attribute:: permission_required
      :value: 'core.add_capital'



   .. py:attribute:: template_name
      :value: 'sc/general_postal_service/general_postal_service_form.html'



.. py:class:: General_postal_serviceDelete

   Bases: :py:obj:`django.contrib.auth.mixins.PermissionRequiredMixin`, :py:obj:`django.views.generic.edit.DeleteView`


   View for deleting an existing General_postal_service object.

   .. note:: This view is restricted to users with the 'add_capital' permission.


   .. py:attribute:: model


   .. py:attribute:: permission_required
      :value: 'core.add_capital'



   .. py:attribute:: success_url


   .. py:attribute:: template_name
      :value: 'core/delete_general.html'



.. py:class:: General_postal_serviceDetailView

   Bases: :py:obj:`django.views.generic.DetailView`


   



   .. py:attribute:: model


   .. py:attribute:: template_name
      :value: 'sc/general_postal_service/general_postal_service_detail.html'



.. py:class:: General_postal_serviceListView

   Bases: :py:obj:`django.views.generic.ListView`


   Paginated view for listing all the General_postal_service objects.


   .. py:method:: get_absolute_url()

      Get the absolute URL of the view.

      :returns: The absolute URL of the view.
      :rtype: str



   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:attribute:: model


   .. py:attribute:: paginate_by
      :value: 10



   .. py:attribute:: template_name
      :value: 'sc/general_postal_service/general_postal_service_list.html'



.. py:class:: General_postal_serviceListViewAll

   Bases: :py:obj:`django.views.generic.ListView`


   



   .. py:method:: get_absolute_url()

      Get the absolute URL of the view.

      :returns: The absolute URL of the view.
      :rtype: str



   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:method:: get_queryset()


   .. py:attribute:: model


   .. py:attribute:: template_name
      :value: 'sc/general_postal_service/general_postal_service_list_all.html'



.. py:class:: General_postal_serviceUpdate

   Bases: :py:obj:`django.contrib.auth.mixins.PermissionRequiredMixin`, :py:obj:`django.views.generic.edit.UpdateView`


   .. note:: This view is restricted to users with the 'add_capital' permission.


   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:attribute:: form_class


   .. py:attribute:: model


   .. py:attribute:: permission_required
      :value: 'core.add_capital'



   .. py:attribute:: template_name
      :value: 'sc/general_postal_service/general_postal_service_update.html'



.. py:class:: HistoryCreate

   Bases: :py:obj:`django.contrib.auth.mixins.PermissionRequiredMixin`, :py:obj:`seshat.apps.general.mixins.PolityIdMixin`, :py:obj:`django.views.generic.edit.CreateView`


   .. note:: This view is restricted to users with the 'add_capital' permission.


   .. py:method:: get_absolute_url()

      Get the absolute URL of the view.

      :returns: The absolute URL of the view.
      :rtype: str



   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:attribute:: form_class


   .. py:attribute:: model


   .. py:attribute:: permission_required
      :value: 'core.add_capital'



   .. py:attribute:: template_name
      :value: 'sc/history/history_form.html'



.. py:class:: HistoryDelete

   Bases: :py:obj:`django.contrib.auth.mixins.PermissionRequiredMixin`, :py:obj:`django.views.generic.edit.DeleteView`


   View for deleting an existing History object.

   .. note:: This view is restricted to users with the 'add_capital' permission.


   .. py:attribute:: model


   .. py:attribute:: permission_required
      :value: 'core.add_capital'



   .. py:attribute:: success_url


   .. py:attribute:: template_name
      :value: 'core/delete_general.html'



.. py:class:: HistoryDetailView

   Bases: :py:obj:`django.views.generic.DetailView`


   



   .. py:attribute:: model


   .. py:attribute:: template_name
      :value: 'sc/history/history_detail.html'



.. py:class:: HistoryListView

   Bases: :py:obj:`django.views.generic.ListView`


   Paginated view for listing all the History objects.


   .. py:method:: get_absolute_url()

      Get the absolute URL of the view.

      :returns: The absolute URL of the view.
      :rtype: str



   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:attribute:: model


   .. py:attribute:: paginate_by
      :value: 10



   .. py:attribute:: template_name
      :value: 'sc/history/history_list.html'



.. py:class:: HistoryListViewAll

   Bases: :py:obj:`django.views.generic.ListView`


   



   .. py:method:: get_absolute_url()

      Get the absolute URL of the view.

      :returns: The absolute URL of the view.
      :rtype: str



   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:method:: get_queryset()


   .. py:attribute:: model


   .. py:attribute:: template_name
      :value: 'sc/history/history_list_all.html'



.. py:class:: HistoryUpdate

   Bases: :py:obj:`django.contrib.auth.mixins.PermissionRequiredMixin`, :py:obj:`django.views.generic.edit.UpdateView`


   .. note:: This view is restricted to users with the 'add_capital' permission.


   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:attribute:: form_class


   .. py:attribute:: model


   .. py:attribute:: permission_required
      :value: 'core.add_capital'



   .. py:attribute:: template_name
      :value: 'sc/history/history_update.html'



.. py:class:: Indigenous_coinCreate

   Bases: :py:obj:`django.contrib.auth.mixins.PermissionRequiredMixin`, :py:obj:`seshat.apps.general.mixins.PolityIdMixin`, :py:obj:`django.views.generic.edit.CreateView`


   .. note:: This view is restricted to users with the 'add_capital' permission.


   .. py:method:: get_absolute_url()

      Get the absolute URL of the view.

      :returns: The absolute URL of the view.
      :rtype: str



   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:attribute:: form_class


   .. py:attribute:: model


   .. py:attribute:: permission_required
      :value: 'core.add_capital'



   .. py:attribute:: template_name
      :value: 'sc/indigenous_coin/indigenous_coin_form.html'



.. py:class:: Indigenous_coinDelete

   Bases: :py:obj:`django.contrib.auth.mixins.PermissionRequiredMixin`, :py:obj:`django.views.generic.edit.DeleteView`


   View for deleting an existing Indigenous_coin object.

   .. note:: This view is restricted to users with the 'add_capital' permission.


   .. py:attribute:: model


   .. py:attribute:: permission_required
      :value: 'core.add_capital'



   .. py:attribute:: success_url


   .. py:attribute:: template_name
      :value: 'core/delete_general.html'



.. py:class:: Indigenous_coinDetailView

   Bases: :py:obj:`django.views.generic.DetailView`


   



   .. py:attribute:: model


   .. py:attribute:: template_name
      :value: 'sc/indigenous_coin/indigenous_coin_detail.html'



.. py:class:: Indigenous_coinListView

   Bases: :py:obj:`django.views.generic.ListView`


   Paginated view for listing all the Indigenous_coin objects.


   .. py:method:: get_absolute_url()

      Get the absolute URL of the view.

      :returns: The absolute URL of the view.
      :rtype: str



   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:attribute:: model


   .. py:attribute:: paginate_by
      :value: 10



   .. py:attribute:: template_name
      :value: 'sc/indigenous_coin/indigenous_coin_list.html'



.. py:class:: Indigenous_coinListViewAll

   Bases: :py:obj:`django.views.generic.ListView`


   



   .. py:method:: get_absolute_url()

      Get the absolute URL of the view.

      :returns: The absolute URL of the view.
      :rtype: str



   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:method:: get_queryset()


   .. py:attribute:: model


   .. py:attribute:: template_name
      :value: 'sc/indigenous_coin/indigenous_coin_list_all.html'



.. py:class:: Indigenous_coinUpdate

   Bases: :py:obj:`django.contrib.auth.mixins.PermissionRequiredMixin`, :py:obj:`django.views.generic.edit.UpdateView`


   .. note:: This view is restricted to users with the 'add_capital' permission.


   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:attribute:: form_class


   .. py:attribute:: model


   .. py:attribute:: permission_required
      :value: 'core.add_capital'



   .. py:attribute:: template_name
      :value: 'sc/indigenous_coin/indigenous_coin_update.html'



.. py:class:: Irrigation_systemCreate

   Bases: :py:obj:`django.contrib.auth.mixins.PermissionRequiredMixin`, :py:obj:`seshat.apps.general.mixins.PolityIdMixin`, :py:obj:`django.views.generic.edit.CreateView`


   .. note:: This view is restricted to users with the 'add_capital' permission.


   .. py:method:: get_absolute_url()

      Get the absolute URL of the view.

      :returns: The absolute URL of the view.
      :rtype: str



   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:attribute:: form_class


   .. py:attribute:: model


   .. py:attribute:: permission_required
      :value: 'core.add_capital'



   .. py:attribute:: template_name
      :value: 'sc/irrigation_system/irrigation_system_form.html'



.. py:class:: Irrigation_systemDelete

   Bases: :py:obj:`django.contrib.auth.mixins.PermissionRequiredMixin`, :py:obj:`django.views.generic.edit.DeleteView`


   View for deleting an existing Irrigation_system object.

   .. note:: This view is restricted to users with the 'add_capital' permission.


   .. py:attribute:: model


   .. py:attribute:: permission_required
      :value: 'core.add_capital'



   .. py:attribute:: success_url


   .. py:attribute:: template_name
      :value: 'core/delete_general.html'



.. py:class:: Irrigation_systemDetailView

   Bases: :py:obj:`django.views.generic.DetailView`


   



   .. py:attribute:: model


   .. py:attribute:: template_name
      :value: 'sc/irrigation_system/irrigation_system_detail.html'



.. py:class:: Irrigation_systemListView

   Bases: :py:obj:`django.views.generic.ListView`


   Paginated view for listing all the Irrigation_system objects.


   .. py:method:: get_absolute_url()

      Get the absolute URL of the view.

      :returns: The absolute URL of the view.
      :rtype: str



   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:attribute:: model


   .. py:attribute:: paginate_by
      :value: 10



   .. py:attribute:: template_name
      :value: 'sc/irrigation_system/irrigation_system_list.html'



.. py:class:: Irrigation_systemListViewAll

   Bases: :py:obj:`django.views.generic.ListView`


   



   .. py:method:: get_absolute_url()

      Get the absolute URL of the view.

      :returns: The absolute URL of the view.
      :rtype: str



   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:method:: get_queryset()


   .. py:attribute:: model


   .. py:attribute:: template_name
      :value: 'sc/irrigation_system/irrigation_system_list_all.html'



.. py:class:: Irrigation_systemUpdate

   Bases: :py:obj:`django.contrib.auth.mixins.PermissionRequiredMixin`, :py:obj:`django.views.generic.edit.UpdateView`


   .. note:: This view is restricted to users with the 'add_capital' permission.


   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:attribute:: form_class


   .. py:attribute:: model


   .. py:attribute:: permission_required
      :value: 'core.add_capital'



   .. py:attribute:: template_name
      :value: 'sc/irrigation_system/irrigation_system_update.html'



.. py:class:: JudgeCreate

   Bases: :py:obj:`django.contrib.auth.mixins.PermissionRequiredMixin`, :py:obj:`seshat.apps.general.mixins.PolityIdMixin`, :py:obj:`django.views.generic.edit.CreateView`


   .. note:: This view is restricted to users with the 'add_capital' permission.


   .. py:method:: get_absolute_url()

      Get the absolute URL of the view.

      :returns: The absolute URL of the view.
      :rtype: str



   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:attribute:: form_class


   .. py:attribute:: model


   .. py:attribute:: permission_required
      :value: 'core.add_capital'



   .. py:attribute:: template_name
      :value: 'sc/judge/judge_form.html'



.. py:class:: JudgeDelete

   Bases: :py:obj:`django.contrib.auth.mixins.PermissionRequiredMixin`, :py:obj:`django.views.generic.edit.DeleteView`


   View for deleting an existing Judge object.

   .. note:: This view is restricted to users with the 'add_capital' permission.


   .. py:attribute:: model


   .. py:attribute:: permission_required
      :value: 'core.add_capital'



   .. py:attribute:: success_url


   .. py:attribute:: template_name
      :value: 'core/delete_general.html'



.. py:class:: JudgeDetailView

   Bases: :py:obj:`django.views.generic.DetailView`


   



   .. py:attribute:: model


   .. py:attribute:: template_name
      :value: 'sc/judge/judge_detail.html'



.. py:class:: JudgeListView

   Bases: :py:obj:`django.views.generic.ListView`


   Paginated view for listing all the Judge objects.


   .. py:method:: get_absolute_url()

      Get the absolute URL of the view.

      :returns: The absolute URL of the view.
      :rtype: str



   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:attribute:: model


   .. py:attribute:: paginate_by
      :value: 10



   .. py:attribute:: template_name
      :value: 'sc/judge/judge_list.html'



.. py:class:: JudgeListViewAll

   Bases: :py:obj:`django.views.generic.ListView`


   



   .. py:method:: get_absolute_url()

      Get the absolute URL of the view.

      :returns: The absolute URL of the view.
      :rtype: str



   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:method:: get_queryset()


   .. py:attribute:: model


   .. py:attribute:: template_name
      :value: 'sc/judge/judge_list_all.html'



.. py:class:: JudgeUpdate

   Bases: :py:obj:`django.contrib.auth.mixins.PermissionRequiredMixin`, :py:obj:`django.views.generic.edit.UpdateView`


   .. note:: This view is restricted to users with the 'add_capital' permission.


   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:attribute:: form_class


   .. py:attribute:: model


   .. py:attribute:: permission_required
      :value: 'core.add_capital'



   .. py:attribute:: template_name
      :value: 'sc/judge/judge_update.html'



.. py:class:: Lists_tables_and_classificationCreate

   Bases: :py:obj:`django.contrib.auth.mixins.PermissionRequiredMixin`, :py:obj:`seshat.apps.general.mixins.PolityIdMixin`, :py:obj:`django.views.generic.edit.CreateView`


   .. note:: This view is restricted to users with the 'add_capital' permission.


   .. py:method:: get_absolute_url()

      Get the absolute URL of the view.

      :returns: The absolute URL of the view.
      :rtype: str



   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:attribute:: form_class


   .. py:attribute:: model


   .. py:attribute:: permission_required
      :value: 'core.add_capital'



   .. py:attribute:: template_name
      :value: 'sc/lists_tables_and_classification/lists_tables_and_classification_form.html'



.. py:class:: Lists_tables_and_classificationDelete

   Bases: :py:obj:`django.contrib.auth.mixins.PermissionRequiredMixin`, :py:obj:`django.views.generic.edit.DeleteView`


   View for deleting an existing Lists_tables_and_classification object.

   .. note:: This view is restricted to users with the 'add_capital' permission.


   .. py:attribute:: model


   .. py:attribute:: permission_required
      :value: 'core.add_capital'



   .. py:attribute:: success_url


   .. py:attribute:: template_name
      :value: 'core/delete_general.html'



.. py:class:: Lists_tables_and_classificationDetailView

   Bases: :py:obj:`django.views.generic.DetailView`


   



   .. py:attribute:: model


   .. py:attribute:: template_name
      :value: 'sc/lists_tables_and_classification/lists_tables_and_classification_detail.html'



.. py:class:: Lists_tables_and_classificationListView

   Bases: :py:obj:`django.views.generic.ListView`


   Paginated view for listing all the Lists_tables_and_classification objects.


   .. py:method:: get_absolute_url()

      Get the absolute URL of the view.

      :returns: The absolute URL of the view.
      :rtype: str



   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:attribute:: model


   .. py:attribute:: paginate_by
      :value: 10



   .. py:attribute:: template_name
      :value: 'sc/lists_tables_and_classification/lists_tables_and_classification_list.html'



.. py:class:: Lists_tables_and_classificationListViewAll

   Bases: :py:obj:`django.views.generic.ListView`


   



   .. py:method:: get_absolute_url()

      Get the absolute URL of the view.

      :returns: The absolute URL of the view.
      :rtype: str



   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:method:: get_queryset()


   .. py:attribute:: model


   .. py:attribute:: template_name
      :value: 'sc/lists_tables_and_classification/lists_tables_and_classification_list_all.html'



.. py:class:: Lists_tables_and_classificationUpdate

   Bases: :py:obj:`django.contrib.auth.mixins.PermissionRequiredMixin`, :py:obj:`django.views.generic.edit.UpdateView`


   .. note:: This view is restricted to users with the 'add_capital' permission.


   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:attribute:: form_class


   .. py:attribute:: model


   .. py:attribute:: permission_required
      :value: 'core.add_capital'



   .. py:attribute:: template_name
      :value: 'sc/lists_tables_and_classification/lists_tables_and_classification_update.html'



.. py:class:: MarketCreate

   Bases: :py:obj:`django.contrib.auth.mixins.PermissionRequiredMixin`, :py:obj:`seshat.apps.general.mixins.PolityIdMixin`, :py:obj:`django.views.generic.edit.CreateView`


   .. note:: This view is restricted to users with the 'add_capital' permission.


   .. py:method:: get_absolute_url()

      Get the absolute URL of the view.

      :returns: The absolute URL of the view.
      :rtype: str



   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:attribute:: form_class


   .. py:attribute:: model


   .. py:attribute:: permission_required
      :value: 'core.add_capital'



   .. py:attribute:: template_name
      :value: 'sc/market/market_form.html'



.. py:class:: MarketDelete

   Bases: :py:obj:`django.contrib.auth.mixins.PermissionRequiredMixin`, :py:obj:`django.views.generic.edit.DeleteView`


   View for deleting an existing Market object.

   .. note:: This view is restricted to users with the 'add_capital' permission.


   .. py:attribute:: model


   .. py:attribute:: permission_required
      :value: 'core.add_capital'



   .. py:attribute:: success_url


   .. py:attribute:: template_name
      :value: 'core/delete_general.html'



.. py:class:: MarketDetailView

   Bases: :py:obj:`django.views.generic.DetailView`


   



   .. py:attribute:: model


   .. py:attribute:: template_name
      :value: 'sc/market/market_detail.html'



.. py:class:: MarketListView

   Bases: :py:obj:`django.views.generic.ListView`


   Paginated view for listing all the Market objects.


   .. py:method:: get_absolute_url()

      Get the absolute URL of the view.

      :returns: The absolute URL of the view.
      :rtype: str



   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:attribute:: model


   .. py:attribute:: paginate_by
      :value: 10



   .. py:attribute:: template_name
      :value: 'sc/market/market_list.html'



.. py:class:: MarketListViewAll

   Bases: :py:obj:`django.views.generic.ListView`


   



   .. py:method:: get_absolute_url()

      Get the absolute URL of the view.

      :returns: The absolute URL of the view.
      :rtype: str



   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:method:: get_queryset()


   .. py:attribute:: model


   .. py:attribute:: template_name
      :value: 'sc/market/market_list_all.html'



.. py:class:: MarketUpdate

   Bases: :py:obj:`django.contrib.auth.mixins.PermissionRequiredMixin`, :py:obj:`django.views.generic.edit.UpdateView`


   .. note:: This view is restricted to users with the 'add_capital' permission.


   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:attribute:: form_class


   .. py:attribute:: model


   .. py:attribute:: permission_required
      :value: 'core.add_capital'



   .. py:attribute:: template_name
      :value: 'sc/market/market_update.html'



.. py:class:: Merit_promotionCreate

   Bases: :py:obj:`django.contrib.auth.mixins.PermissionRequiredMixin`, :py:obj:`seshat.apps.general.mixins.PolityIdMixin`, :py:obj:`django.views.generic.edit.CreateView`


   .. note:: This view is restricted to users with the 'add_capital' permission.


   .. py:method:: get_absolute_url()

      Get the absolute URL of the view.

      :returns: The absolute URL of the view.
      :rtype: str



   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:attribute:: form_class


   .. py:attribute:: model


   .. py:attribute:: permission_required
      :value: 'core.add_capital'



   .. py:attribute:: template_name
      :value: 'sc/merit_promotion/merit_promotion_form.html'



.. py:class:: Merit_promotionDelete

   Bases: :py:obj:`django.contrib.auth.mixins.PermissionRequiredMixin`, :py:obj:`django.views.generic.edit.DeleteView`


   View for deleting an existing Merit_promotion object.

   .. note:: This view is restricted to users with the 'add_capital' permission.


   .. py:attribute:: model


   .. py:attribute:: permission_required
      :value: 'core.add_capital'



   .. py:attribute:: success_url


   .. py:attribute:: template_name
      :value: 'core/delete_general.html'



.. py:class:: Merit_promotionDetailView

   Bases: :py:obj:`django.views.generic.DetailView`


   



   .. py:attribute:: model


   .. py:attribute:: template_name
      :value: 'sc/merit_promotion/merit_promotion_detail.html'



.. py:class:: Merit_promotionListView

   Bases: :py:obj:`django.views.generic.ListView`


   Paginated view for listing all the Merit_promotion objects.


   .. py:method:: get_absolute_url()

      Get the absolute URL of the view.

      :returns: The absolute URL of the view.
      :rtype: str



   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:attribute:: model


   .. py:attribute:: paginate_by
      :value: 10



   .. py:attribute:: template_name
      :value: 'sc/merit_promotion/merit_promotion_list.html'



.. py:class:: Merit_promotionListViewAll

   Bases: :py:obj:`django.views.generic.ListView`


   



   .. py:method:: get_absolute_url()

      Get the absolute URL of the view.

      :returns: The absolute URL of the view.
      :rtype: str



   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:method:: get_queryset()


   .. py:attribute:: model


   .. py:attribute:: template_name
      :value: 'sc/merit_promotion/merit_promotion_list_all.html'



.. py:class:: Merit_promotionUpdate

   Bases: :py:obj:`django.contrib.auth.mixins.PermissionRequiredMixin`, :py:obj:`django.views.generic.edit.UpdateView`


   .. note:: This view is restricted to users with the 'add_capital' permission.


   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:attribute:: form_class


   .. py:attribute:: model


   .. py:attribute:: permission_required
      :value: 'core.add_capital'



   .. py:attribute:: template_name
      :value: 'sc/merit_promotion/merit_promotion_update.html'



.. py:class:: Military_levelCreate

   Bases: :py:obj:`django.contrib.auth.mixins.PermissionRequiredMixin`, :py:obj:`seshat.apps.general.mixins.PolityIdMixin`, :py:obj:`django.views.generic.edit.CreateView`


   .. note:: This view is restricted to users with the 'add_capital' permission.


   .. py:method:: get_absolute_url()

      Get the absolute URL of the view.

      :returns: The absolute URL of the view.
      :rtype: str



   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:attribute:: form_class


   .. py:attribute:: model


   .. py:attribute:: permission_required
      :value: 'core.add_capital'



   .. py:attribute:: template_name
      :value: 'sc/military_level/military_level_form.html'



.. py:class:: Military_levelDelete

   Bases: :py:obj:`django.contrib.auth.mixins.PermissionRequiredMixin`, :py:obj:`django.views.generic.edit.DeleteView`


   View for deleting an existing Military_level object.

   .. note:: This view is restricted to users with the 'add_capital' permission.


   .. py:attribute:: model


   .. py:attribute:: permission_required
      :value: 'core.add_capital'



   .. py:attribute:: success_url


   .. py:attribute:: template_name
      :value: 'core/delete_general.html'



.. py:class:: Military_levelDetailView

   Bases: :py:obj:`django.views.generic.DetailView`


   



   .. py:attribute:: model


   .. py:attribute:: template_name
      :value: 'sc/military_level/military_level_detail.html'



.. py:class:: Military_levelListView

   Bases: :py:obj:`django.views.generic.ListView`


   Paginated view for listing all the Military_level objects.


   .. py:method:: get_absolute_url()

      Get the absolute URL of the view.

      :returns: The absolute URL of the view.
      :rtype: str



   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:attribute:: model


   .. py:attribute:: paginate_by
      :value: 10



   .. py:attribute:: template_name
      :value: 'sc/military_level/military_level_list.html'



.. py:class:: Military_levelUpdate

   Bases: :py:obj:`django.contrib.auth.mixins.PermissionRequiredMixin`, :py:obj:`django.views.generic.edit.UpdateView`


   .. note:: This view is restricted to users with the 'add_capital' permission.


   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:attribute:: form_class


   .. py:attribute:: model


   .. py:attribute:: permission_required
      :value: 'core.add_capital'



   .. py:attribute:: template_name
      :value: 'sc/military_level/military_level_update.html'



.. py:class:: Mines_or_quarryCreate

   Bases: :py:obj:`django.contrib.auth.mixins.PermissionRequiredMixin`, :py:obj:`seshat.apps.general.mixins.PolityIdMixin`, :py:obj:`django.views.generic.edit.CreateView`


   .. note:: This view is restricted to users with the 'add_capital' permission.


   .. py:method:: get_absolute_url()

      Get the absolute URL of the view.

      :returns: The absolute URL of the view.
      :rtype: str



   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:attribute:: form_class


   .. py:attribute:: model


   .. py:attribute:: permission_required
      :value: 'core.add_capital'



   .. py:attribute:: template_name
      :value: 'sc/mines_or_quarry/mines_or_quarry_form.html'



.. py:class:: Mines_or_quarryDelete

   Bases: :py:obj:`django.contrib.auth.mixins.PermissionRequiredMixin`, :py:obj:`django.views.generic.edit.DeleteView`


   View for deleting an existing Mines_or_quarry object.

   .. note:: This view is restricted to users with the 'add_capital' permission.


   .. py:attribute:: model


   .. py:attribute:: permission_required
      :value: 'core.add_capital'



   .. py:attribute:: success_url


   .. py:attribute:: template_name
      :value: 'core/delete_general.html'



.. py:class:: Mines_or_quarryDetailView

   Bases: :py:obj:`django.views.generic.DetailView`


   



   .. py:attribute:: model


   .. py:attribute:: template_name
      :value: 'sc/mines_or_quarry/mines_or_quarry_detail.html'



.. py:class:: Mines_or_quarryListView

   Bases: :py:obj:`django.views.generic.ListView`


   Paginated view for listing all the Mines_or_quarry objects.


   .. py:method:: get_absolute_url()

      Get the absolute URL of the view.

      :returns: The absolute URL of the view.
      :rtype: str



   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:attribute:: model


   .. py:attribute:: paginate_by
      :value: 10



   .. py:attribute:: template_name
      :value: 'sc/mines_or_quarry/mines_or_quarry_list.html'



.. py:class:: Mines_or_quarryListViewAll

   Bases: :py:obj:`django.views.generic.ListView`


   



   .. py:method:: get_absolute_url()

      Get the absolute URL of the view.

      :returns: The absolute URL of the view.
      :rtype: str



   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:method:: get_queryset()


   .. py:attribute:: model


   .. py:attribute:: template_name
      :value: 'sc/mines_or_quarry/mines_or_quarry_list_all.html'



.. py:class:: Mines_or_quarryUpdate

   Bases: :py:obj:`django.contrib.auth.mixins.PermissionRequiredMixin`, :py:obj:`django.views.generic.edit.UpdateView`


   .. note:: This view is restricted to users with the 'add_capital' permission.


   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:attribute:: form_class


   .. py:attribute:: model


   .. py:attribute:: permission_required
      :value: 'core.add_capital'



   .. py:attribute:: template_name
      :value: 'sc/mines_or_quarry/mines_or_quarry_update.html'



.. py:class:: Mnemonic_deviceCreate

   Bases: :py:obj:`django.contrib.auth.mixins.PermissionRequiredMixin`, :py:obj:`seshat.apps.general.mixins.PolityIdMixin`, :py:obj:`django.views.generic.edit.CreateView`


   .. note:: This view is restricted to users with the 'add_capital' permission.


   .. py:method:: get_absolute_url()

      Get the absolute URL of the view.

      :returns: The absolute URL of the view.
      :rtype: str



   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:attribute:: form_class


   .. py:attribute:: model


   .. py:attribute:: permission_required
      :value: 'core.add_capital'



   .. py:attribute:: template_name
      :value: 'sc/mnemonic_device/mnemonic_device_form.html'



.. py:class:: Mnemonic_deviceDelete

   Bases: :py:obj:`django.contrib.auth.mixins.PermissionRequiredMixin`, :py:obj:`django.views.generic.edit.DeleteView`


   View for deleting an existing Mnemonic_device object.

   .. note:: This view is restricted to users with the 'add_capital' permission.


   .. py:attribute:: model


   .. py:attribute:: permission_required
      :value: 'core.add_capital'



   .. py:attribute:: success_url


   .. py:attribute:: template_name
      :value: 'core/delete_general.html'



.. py:class:: Mnemonic_deviceDetailView

   Bases: :py:obj:`django.views.generic.DetailView`


   



   .. py:attribute:: model


   .. py:attribute:: template_name
      :value: 'sc/mnemonic_device/mnemonic_device_detail.html'



.. py:class:: Mnemonic_deviceListView

   Bases: :py:obj:`django.views.generic.ListView`


   Paginated view for listing all the Mnemonic_device objects.


   .. py:method:: get_absolute_url()

      Get the absolute URL of the view.

      :returns: The absolute URL of the view.
      :rtype: str



   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:attribute:: model


   .. py:attribute:: paginate_by
      :value: 10



   .. py:attribute:: template_name
      :value: 'sc/mnemonic_device/mnemonic_device_list.html'



.. py:class:: Mnemonic_deviceListViewAll

   Bases: :py:obj:`django.views.generic.ListView`


   



   .. py:method:: get_absolute_url()

      Get the absolute URL of the view.

      :returns: The absolute URL of the view.
      :rtype: str



   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:method:: get_queryset()


   .. py:attribute:: model


   .. py:attribute:: template_name
      :value: 'sc/mnemonic_device/mnemonic_device_list_all.html'



.. py:class:: Mnemonic_deviceUpdate

   Bases: :py:obj:`django.contrib.auth.mixins.PermissionRequiredMixin`, :py:obj:`django.views.generic.edit.UpdateView`


   .. note:: This view is restricted to users with the 'add_capital' permission.


   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:attribute:: form_class


   .. py:attribute:: model


   .. py:attribute:: permission_required
      :value: 'core.add_capital'



   .. py:attribute:: template_name
      :value: 'sc/mnemonic_device/mnemonic_device_update.html'



.. py:class:: Non_phonetic_writingCreate

   Bases: :py:obj:`django.contrib.auth.mixins.PermissionRequiredMixin`, :py:obj:`seshat.apps.general.mixins.PolityIdMixin`, :py:obj:`django.views.generic.edit.CreateView`


   .. note:: This view is restricted to users with the 'add_capital' permission.


   .. py:method:: get_absolute_url()

      Get the absolute URL of the view.

      :returns: The absolute URL of the view.
      :rtype: str



   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:attribute:: form_class


   .. py:attribute:: model


   .. py:attribute:: permission_required
      :value: 'core.add_capital'



   .. py:attribute:: template_name
      :value: 'sc/non_phonetic_writing/non_phonetic_writing_form.html'



.. py:class:: Non_phonetic_writingDelete

   Bases: :py:obj:`django.contrib.auth.mixins.PermissionRequiredMixin`, :py:obj:`django.views.generic.edit.DeleteView`


   View for deleting an existing Non_phonetic_writing object.

   .. note:: This view is restricted to users with the 'add_capital' permission.


   .. py:attribute:: model


   .. py:attribute:: permission_required
      :value: 'core.add_capital'



   .. py:attribute:: success_url


   .. py:attribute:: template_name
      :value: 'core/delete_general.html'



.. py:class:: Non_phonetic_writingDetailView

   Bases: :py:obj:`django.views.generic.DetailView`


   



   .. py:attribute:: model


   .. py:attribute:: template_name
      :value: 'sc/non_phonetic_writing/non_phonetic_writing_detail.html'



.. py:class:: Non_phonetic_writingListView

   Bases: :py:obj:`django.views.generic.ListView`


   Paginated view for listing all the Non_phonetic_writing objects.


   .. py:method:: get_absolute_url()

      Get the absolute URL of the view.

      :returns: The absolute URL of the view.
      :rtype: str



   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:attribute:: model


   .. py:attribute:: paginate_by
      :value: 10



   .. py:attribute:: template_name
      :value: 'sc/non_phonetic_writing/non_phonetic_writing_list.html'



.. py:class:: Non_phonetic_writingListViewAll

   Bases: :py:obj:`django.views.generic.ListView`


   



   .. py:method:: get_absolute_url()

      Get the absolute URL of the view.

      :returns: The absolute URL of the view.
      :rtype: str



   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:method:: get_queryset()


   .. py:attribute:: model


   .. py:attribute:: template_name
      :value: 'sc/non_phonetic_writing/non_phonetic_writing_list_all.html'



.. py:class:: Non_phonetic_writingUpdate

   Bases: :py:obj:`django.contrib.auth.mixins.PermissionRequiredMixin`, :py:obj:`django.views.generic.edit.UpdateView`


   .. note:: This view is restricted to users with the 'add_capital' permission.


   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:attribute:: form_class


   .. py:attribute:: model


   .. py:attribute:: permission_required
      :value: 'core.add_capital'



   .. py:attribute:: template_name
      :value: 'sc/non_phonetic_writing/non_phonetic_writing_update.html'



.. py:class:: Nonwritten_recordCreate

   Bases: :py:obj:`django.contrib.auth.mixins.PermissionRequiredMixin`, :py:obj:`seshat.apps.general.mixins.PolityIdMixin`, :py:obj:`django.views.generic.edit.CreateView`


   .. note:: This view is restricted to users with the 'add_capital' permission.


   .. py:method:: get_absolute_url()

      Get the absolute URL of the view.

      :returns: The absolute URL of the view.
      :rtype: str



   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:attribute:: form_class


   .. py:attribute:: model


   .. py:attribute:: permission_required
      :value: 'core.add_capital'



   .. py:attribute:: template_name
      :value: 'sc/nonwritten_record/nonwritten_record_form.html'



.. py:class:: Nonwritten_recordDelete

   Bases: :py:obj:`django.contrib.auth.mixins.PermissionRequiredMixin`, :py:obj:`django.views.generic.edit.DeleteView`


   View for deleting an existing Nonwritten_record object.

   .. note:: This view is restricted to users with the 'add_capital' permission.


   .. py:attribute:: model


   .. py:attribute:: permission_required
      :value: 'core.add_capital'



   .. py:attribute:: success_url


   .. py:attribute:: template_name
      :value: 'core/delete_general.html'



.. py:class:: Nonwritten_recordDetailView

   Bases: :py:obj:`django.views.generic.DetailView`


   



   .. py:attribute:: model


   .. py:attribute:: template_name
      :value: 'sc/nonwritten_record/nonwritten_record_detail.html'



.. py:class:: Nonwritten_recordListView

   Bases: :py:obj:`django.views.generic.ListView`


   Paginated view for listing all the Nonwritten_record objects.


   .. py:method:: get_absolute_url()

      Get the absolute URL of the view.

      :returns: The absolute URL of the view.
      :rtype: str



   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:attribute:: model


   .. py:attribute:: paginate_by
      :value: 10



   .. py:attribute:: template_name
      :value: 'sc/nonwritten_record/nonwritten_record_list.html'



.. py:class:: Nonwritten_recordListViewAll

   Bases: :py:obj:`django.views.generic.ListView`


   



   .. py:method:: get_absolute_url()

      Get the absolute URL of the view.

      :returns: The absolute URL of the view.
      :rtype: str



   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:method:: get_queryset()


   .. py:attribute:: model


   .. py:attribute:: template_name
      :value: 'sc/nonwritten_record/nonwritten_record_list_all.html'



.. py:class:: Nonwritten_recordUpdate

   Bases: :py:obj:`django.contrib.auth.mixins.PermissionRequiredMixin`, :py:obj:`django.views.generic.edit.UpdateView`


   .. note:: This view is restricted to users with the 'add_capital' permission.


   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:attribute:: form_class


   .. py:attribute:: model


   .. py:attribute:: permission_required
      :value: 'core.add_capital'



   .. py:attribute:: template_name
      :value: 'sc/nonwritten_record/nonwritten_record_update.html'



.. py:class:: Paper_currencyCreate

   Bases: :py:obj:`django.contrib.auth.mixins.PermissionRequiredMixin`, :py:obj:`seshat.apps.general.mixins.PolityIdMixin`, :py:obj:`django.views.generic.edit.CreateView`


   .. note:: This view is restricted to users with the 'add_capital' permission.


   .. py:method:: get_absolute_url()

      Get the absolute URL of the view.

      :returns: The absolute URL of the view.
      :rtype: str



   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:attribute:: form_class


   .. py:attribute:: model


   .. py:attribute:: permission_required
      :value: 'core.add_capital'



   .. py:attribute:: template_name
      :value: 'sc/paper_currency/paper_currency_form.html'



.. py:class:: Paper_currencyDelete

   Bases: :py:obj:`django.contrib.auth.mixins.PermissionRequiredMixin`, :py:obj:`django.views.generic.edit.DeleteView`


   View for deleting an existing Paper_currency object.

   .. note:: This view is restricted to users with the 'add_capital' permission.


   .. py:attribute:: model


   .. py:attribute:: permission_required
      :value: 'core.add_capital'



   .. py:attribute:: success_url


   .. py:attribute:: template_name
      :value: 'core/delete_general.html'



.. py:class:: Paper_currencyDetailView

   Bases: :py:obj:`django.views.generic.DetailView`


   



   .. py:attribute:: model


   .. py:attribute:: template_name
      :value: 'sc/paper_currency/paper_currency_detail.html'



.. py:class:: Paper_currencyListView

   Bases: :py:obj:`django.views.generic.ListView`


   Paginated view for listing all the Paper_currency objects.


   .. py:method:: get_absolute_url()

      Get the absolute URL of the view.

      :returns: The absolute URL of the view.
      :rtype: str



   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:attribute:: model


   .. py:attribute:: paginate_by
      :value: 10



   .. py:attribute:: template_name
      :value: 'sc/paper_currency/paper_currency_list.html'



.. py:class:: Paper_currencyListViewAll

   Bases: :py:obj:`django.views.generic.ListView`


   



   .. py:method:: get_absolute_url()

      Get the absolute URL of the view.

      :returns: The absolute URL of the view.
      :rtype: str



   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:method:: get_queryset()


   .. py:attribute:: model


   .. py:attribute:: template_name
      :value: 'sc/paper_currency/paper_currency_list_all.html'



.. py:class:: Paper_currencyUpdate

   Bases: :py:obj:`django.contrib.auth.mixins.PermissionRequiredMixin`, :py:obj:`django.views.generic.edit.UpdateView`


   .. note:: This view is restricted to users with the 'add_capital' permission.


   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:attribute:: form_class


   .. py:attribute:: model


   .. py:attribute:: permission_required
      :value: 'core.add_capital'



   .. py:attribute:: template_name
      :value: 'sc/paper_currency/paper_currency_update.html'



.. py:class:: PhilosophyCreate

   Bases: :py:obj:`django.contrib.auth.mixins.PermissionRequiredMixin`, :py:obj:`seshat.apps.general.mixins.PolityIdMixin`, :py:obj:`django.views.generic.edit.CreateView`


   .. note:: This view is restricted to users with the 'add_capital' permission.


   .. py:method:: get_absolute_url()

      Get the absolute URL of the view.

      :returns: The absolute URL of the view.
      :rtype: str



   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:attribute:: form_class


   .. py:attribute:: model


   .. py:attribute:: permission_required
      :value: 'core.add_capital'



   .. py:attribute:: template_name
      :value: 'sc/philosophy/philosophy_form.html'



.. py:class:: PhilosophyDelete

   Bases: :py:obj:`django.contrib.auth.mixins.PermissionRequiredMixin`, :py:obj:`django.views.generic.edit.DeleteView`


   View for deleting an existing Philosophy object.

   .. note:: This view is restricted to users with the 'add_capital' permission.


   .. py:attribute:: model


   .. py:attribute:: permission_required
      :value: 'core.add_capital'



   .. py:attribute:: success_url


   .. py:attribute:: template_name
      :value: 'core/delete_general.html'



.. py:class:: PhilosophyDetailView

   Bases: :py:obj:`django.views.generic.DetailView`


   



   .. py:attribute:: model


   .. py:attribute:: template_name
      :value: 'sc/philosophy/philosophy_detail.html'



.. py:class:: PhilosophyListView

   Bases: :py:obj:`django.views.generic.ListView`


   Paginated view for listing all the Philosophy objects.


   .. py:method:: get_absolute_url()

      Get the absolute URL of the view.

      :returns: The absolute URL of the view.
      :rtype: str



   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:attribute:: model


   .. py:attribute:: paginate_by
      :value: 10



   .. py:attribute:: template_name
      :value: 'sc/philosophy/philosophy_list.html'



.. py:class:: PhilosophyListViewAll

   Bases: :py:obj:`django.views.generic.ListView`


   



   .. py:method:: get_absolute_url()

      Get the absolute URL of the view.

      :returns: The absolute URL of the view.
      :rtype: str



   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:method:: get_queryset()


   .. py:attribute:: model


   .. py:attribute:: template_name
      :value: 'sc/philosophy/philosophy_list_all.html'



.. py:class:: PhilosophyUpdate

   Bases: :py:obj:`django.contrib.auth.mixins.PermissionRequiredMixin`, :py:obj:`django.views.generic.edit.UpdateView`


   .. note:: This view is restricted to users with the 'add_capital' permission.


   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:attribute:: form_class


   .. py:attribute:: model


   .. py:attribute:: permission_required
      :value: 'core.add_capital'



   .. py:attribute:: template_name
      :value: 'sc/philosophy/philosophy_update.html'



.. py:class:: Phonetic_alphabetic_writingCreate

   Bases: :py:obj:`django.contrib.auth.mixins.PermissionRequiredMixin`, :py:obj:`seshat.apps.general.mixins.PolityIdMixin`, :py:obj:`django.views.generic.edit.CreateView`


   .. note:: This view is restricted to users with the 'add_capital' permission.


   .. py:method:: get_absolute_url()

      Get the absolute URL of the view.

      :returns: The absolute URL of the view.
      :rtype: str



   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:attribute:: form_class


   .. py:attribute:: model


   .. py:attribute:: permission_required
      :value: 'core.add_capital'



   .. py:attribute:: template_name
      :value: 'sc/phonetic_alphabetic_writing/phonetic_alphabetic_writing_form.html'



.. py:class:: Phonetic_alphabetic_writingDelete

   Bases: :py:obj:`django.contrib.auth.mixins.PermissionRequiredMixin`, :py:obj:`django.views.generic.edit.DeleteView`


   View for deleting an existing Phonetic_alphabetic_writing object.

   .. note:: This view is restricted to users with the 'add_capital' permission.


   .. py:attribute:: model


   .. py:attribute:: permission_required
      :value: 'core.add_capital'



   .. py:attribute:: success_url


   .. py:attribute:: template_name
      :value: 'core/delete_general.html'



.. py:class:: Phonetic_alphabetic_writingDetailView

   Bases: :py:obj:`django.views.generic.DetailView`


   



   .. py:attribute:: model


   .. py:attribute:: template_name
      :value: 'sc/phonetic_alphabetic_writing/phonetic_alphabetic_writing_detail.html'



.. py:class:: Phonetic_alphabetic_writingListView

   Bases: :py:obj:`django.views.generic.ListView`


   Paginated view for listing all the Phonetic_alphabetic_writing objects.


   .. py:method:: get_absolute_url()

      Get the absolute URL of the view.

      :returns: The absolute URL of the view.
      :rtype: str



   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:attribute:: model


   .. py:attribute:: paginate_by
      :value: 10



   .. py:attribute:: template_name
      :value: 'sc/phonetic_alphabetic_writing/phonetic_alphabetic_writing_list.html'



.. py:class:: Phonetic_alphabetic_writingListViewAll

   Bases: :py:obj:`django.views.generic.ListView`


   



   .. py:method:: get_absolute_url()

      Get the absolute URL of the view.

      :returns: The absolute URL of the view.
      :rtype: str



   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:method:: get_queryset()


   .. py:attribute:: model


   .. py:attribute:: template_name
      :value: 'sc/phonetic_alphabetic_writing/phonetic_alphabetic_writing_list_all.html'



.. py:class:: Phonetic_alphabetic_writingUpdate

   Bases: :py:obj:`django.contrib.auth.mixins.PermissionRequiredMixin`, :py:obj:`django.views.generic.edit.UpdateView`


   .. note:: This view is restricted to users with the 'add_capital' permission.


   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:attribute:: form_class


   .. py:attribute:: model


   .. py:attribute:: permission_required
      :value: 'core.add_capital'



   .. py:attribute:: template_name
      :value: 'sc/phonetic_alphabetic_writing/phonetic_alphabetic_writing_update.html'



.. py:class:: Polity_populationCreate

   Bases: :py:obj:`django.contrib.auth.mixins.PermissionRequiredMixin`, :py:obj:`seshat.apps.general.mixins.PolityIdMixin`, :py:obj:`django.views.generic.edit.CreateView`


   View for creating a new Polity_population object.

   .. note:: This view is restricted to users with the 'add_capital' permission.


   .. py:method:: get_absolute_url()

      Get the absolute URL of the view.

      :returns: The absolute URL of the view.
      :rtype: str



   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:attribute:: form_class


   .. py:attribute:: model


   .. py:attribute:: permission_required
      :value: 'core.add_capital'



   .. py:attribute:: template_name
      :value: 'sc/polity_population/polity_population_form.html'



.. py:class:: Polity_populationDelete

   Bases: :py:obj:`django.contrib.auth.mixins.PermissionRequiredMixin`, :py:obj:`django.views.generic.edit.DeleteView`


   View for deleting an existing Polity_population object.

   .. note:: This view is restricted to users with the 'add_capital' permission.


   .. py:attribute:: model


   .. py:attribute:: permission_required
      :value: 'core.add_capital'



   .. py:attribute:: success_url


   .. py:attribute:: template_name
      :value: 'core/delete_general.html'



.. py:class:: Polity_populationDetailView

   Bases: :py:obj:`django.views.generic.DetailView`


   View for displaying the details of a Polity_population object.


   .. py:attribute:: model


   .. py:attribute:: template_name
      :value: 'sc/polity_population/polity_population_detail.html'



.. py:class:: Polity_populationListView

   Bases: :py:obj:`django.views.generic.ListView`


   Paginated view for listing all the Polity_population objects.


   .. py:method:: get_absolute_url()

      Get the absolute URL of the view.

      :returns: The absolute URL of the view.
      :rtype: str



   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:attribute:: model


   .. py:attribute:: paginate_by
      :value: 10



   .. py:attribute:: template_name
      :value: 'sc/polity_population/polity_population_list.html'



.. py:class:: Polity_populationListViewAll

   Bases: :py:obj:`django.views.generic.ListView`


   View for listing all the Polity_population objects.


   .. py:method:: get_absolute_url()

      Get the absolute URL of the view.

      :returns: The absolute URL of the view.
      :rtype: str



   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:method:: get_queryset()


   .. py:attribute:: model


   .. py:attribute:: template_name
      :value: 'sc/polity_population/polity_population_list_all.html'



.. py:class:: Polity_populationUpdate

   Bases: :py:obj:`django.contrib.auth.mixins.PermissionRequiredMixin`, :py:obj:`django.views.generic.edit.UpdateView`


   View for updating an existing Polity_population object.

   .. note:: This view is restricted to users with the 'add_capital' permission.


   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:attribute:: form_class


   .. py:attribute:: model


   .. py:attribute:: permission_required
      :value: 'core.add_capital'



   .. py:attribute:: template_name
      :value: 'sc/polity_population/polity_population_update.html'



.. py:class:: Polity_territoryCreate

   Bases: :py:obj:`django.contrib.auth.mixins.PermissionRequiredMixin`, :py:obj:`seshat.apps.general.mixins.PolityIdMixin`, :py:obj:`django.views.generic.edit.CreateView`


   View for creating a new Polity_territory object.

   .. note:: This view is restricted to users with the 'add_capital' permission.


   .. py:method:: get_absolute_url()

      Get the absolute URL of the view.

      :returns: The absolute URL of the view.
      :rtype: str



   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:attribute:: form_class


   .. py:attribute:: model


   .. py:attribute:: permission_required
      :value: 'core.add_capital'



   .. py:attribute:: template_name
      :value: 'sc/polity_territory/polity_territory_form.html'



.. py:class:: Polity_territoryDelete

   Bases: :py:obj:`django.contrib.auth.mixins.PermissionRequiredMixin`, :py:obj:`django.views.generic.edit.DeleteView`


   View for deleting an existing Polity_territory object.

   .. note:: This view is restricted to users with the 'add_capital' permission.


   .. py:attribute:: model


   .. py:attribute:: permission_required
      :value: 'core.add_capital'



   .. py:attribute:: success_url


   .. py:attribute:: template_name
      :value: 'core/delete_general.html'



.. py:class:: Polity_territoryDetailView

   Bases: :py:obj:`django.views.generic.DetailView`


   View for displaying the details of a Polity_territory object.


   .. py:attribute:: model


   .. py:attribute:: template_name
      :value: 'sc/polity_territory/polity_territory_detail.html'



.. py:class:: Polity_territoryListView

   Bases: :py:obj:`django.views.generic.ListView`


   Paginated view for listing all the Polity_territory objects.


   .. py:method:: get_absolute_url()

      Get the absolute URL of the view.

      :returns: The absolute URL of the view.
      :rtype: str



   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:attribute:: model


   .. py:attribute:: paginate_by
      :value: 10



   .. py:attribute:: template_name
      :value: 'sc/polity_territory/polity_territory_list.html'



.. py:class:: Polity_territoryListViewAll

   Bases: :py:obj:`django.views.generic.ListView`


   View for listing all the Polity_territory objects.


   .. py:method:: get_absolute_url()

      Get the absolute URL of the view.

      :returns: The absolute URL of the view.
      :rtype: str



   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:method:: get_queryset()


   .. py:attribute:: model


   .. py:attribute:: template_name
      :value: 'sc/polity_territory/polity_territory_list_all.html'



.. py:class:: Polity_territoryUpdate

   Bases: :py:obj:`django.contrib.auth.mixins.PermissionRequiredMixin`, :py:obj:`django.views.generic.edit.UpdateView`


   View for updating an existing Polity_territory object.

   .. note:: This view is restricted to users with the 'add_capital' permission.


   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:attribute:: form_class


   .. py:attribute:: model


   .. py:attribute:: permission_required
      :value: 'core.add_capital'



   .. py:attribute:: template_name
      :value: 'sc/polity_territory/polity_territory_update.html'



.. py:class:: Population_of_the_largest_settlementCreate

   Bases: :py:obj:`django.contrib.auth.mixins.PermissionRequiredMixin`, :py:obj:`seshat.apps.general.mixins.PolityIdMixin`, :py:obj:`django.views.generic.edit.CreateView`


   View for creating a new Population_of_the_largest_settlement object.

   .. note:: This view is restricted to users with the 'add_capital' permission.


   .. py:method:: get_absolute_url()

      Get the absolute URL of the view.

      :returns: The absolute URL of the view.
      :rtype: str



   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:attribute:: form_class


   .. py:attribute:: model


   .. py:attribute:: permission_required
      :value: 'core.add_capital'



   .. py:attribute:: template_name
      :value: 'sc/population_of_the_largest_settlement/population_of_the_largest_settlement_form.html'



.. py:class:: Population_of_the_largest_settlementDelete

   Bases: :py:obj:`django.contrib.auth.mixins.PermissionRequiredMixin`, :py:obj:`django.views.generic.edit.DeleteView`


   View for deleting an existing Population_of_the_largest_settlement object.

   .. note:: This view is restricted to users with the 'add_capital' permission.


   .. py:attribute:: model


   .. py:attribute:: permission_required
      :value: 'core.add_capital'



   .. py:attribute:: success_url


   .. py:attribute:: template_name
      :value: 'core/delete_general.html'



.. py:class:: Population_of_the_largest_settlementDetailView

   Bases: :py:obj:`django.views.generic.DetailView`


   



   .. py:attribute:: model


   .. py:attribute:: template_name
      :value: 'sc/population_of_the_largest_settlement/population_of_the_largest_settlement_detail.html'



.. py:class:: Population_of_the_largest_settlementListView

   Bases: :py:obj:`django.views.generic.ListView`


   Paginated view for listing all the Population_of_the_largest_settlement objects.


   .. py:method:: get_absolute_url()

      Get the absolute URL of the view.

      :returns: The absolute URL of the view.
      :rtype: str



   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:attribute:: model


   .. py:attribute:: paginate_by
      :value: 10



   .. py:attribute:: template_name
      :value: 'sc/population_of_the_largest_settlement/population_of_the_largest_settlement_list.html'



.. py:class:: Population_of_the_largest_settlementListViewAll

   Bases: :py:obj:`django.views.generic.ListView`


   



   .. py:method:: get_absolute_url()

      Get the absolute URL of the view.

      :returns: The absolute URL of the view.
      :rtype: str



   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:method:: get_queryset()


   .. py:attribute:: model


   .. py:attribute:: template_name
      :value: 'sc/population_of_the_largest_settlement/population_of_the_largest_settlement_list_all.html'



.. py:class:: Population_of_the_largest_settlementUpdate

   Bases: :py:obj:`django.contrib.auth.mixins.PermissionRequiredMixin`, :py:obj:`django.views.generic.edit.UpdateView`


   .. note:: This view is restricted to users with the 'add_capital' permission.


   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:attribute:: form_class


   .. py:attribute:: model


   .. py:attribute:: permission_required
      :value: 'core.add_capital'



   .. py:attribute:: template_name
      :value: 'sc/population_of_the_largest_settlement/population_of_the_largest_settlement_update.html'



.. py:class:: PortCreate

   Bases: :py:obj:`django.contrib.auth.mixins.PermissionRequiredMixin`, :py:obj:`seshat.apps.general.mixins.PolityIdMixin`, :py:obj:`django.views.generic.edit.CreateView`


   .. note:: This view is restricted to users with the 'add_capital' permission.


   .. py:method:: get_absolute_url()

      Get the absolute URL of the view.

      :returns: The absolute URL of the view.
      :rtype: str



   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:attribute:: form_class


   .. py:attribute:: model


   .. py:attribute:: permission_required
      :value: 'core.add_capital'



   .. py:attribute:: template_name
      :value: 'sc/port/port_form.html'



.. py:class:: PortDelete

   Bases: :py:obj:`django.contrib.auth.mixins.PermissionRequiredMixin`, :py:obj:`django.views.generic.edit.DeleteView`


   View for deleting an existing Port object.

   .. note:: This view is restricted to users with the 'add_capital' permission.


   .. py:attribute:: model


   .. py:attribute:: permission_required
      :value: 'core.add_capital'



   .. py:attribute:: success_url


   .. py:attribute:: template_name
      :value: 'core/delete_general.html'



.. py:class:: PortDetailView

   Bases: :py:obj:`django.views.generic.DetailView`


   



   .. py:attribute:: model


   .. py:attribute:: template_name
      :value: 'sc/port/port_detail.html'



.. py:class:: PortListView

   Bases: :py:obj:`django.views.generic.ListView`


   Paginated view for listing all the Port objects.


   .. py:method:: get_absolute_url()

      Get the absolute URL of the view.

      :returns: The absolute URL of the view.
      :rtype: str



   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:attribute:: model


   .. py:attribute:: paginate_by
      :value: 10



   .. py:attribute:: template_name
      :value: 'sc/port/port_list.html'



.. py:class:: PortListViewAll

   Bases: :py:obj:`django.views.generic.ListView`


   



   .. py:method:: get_absolute_url()

      Get the absolute URL of the view.

      :returns: The absolute URL of the view.
      :rtype: str



   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:method:: get_queryset()


   .. py:attribute:: model


   .. py:attribute:: template_name
      :value: 'sc/port/port_list_all.html'



.. py:class:: PortUpdate

   Bases: :py:obj:`django.contrib.auth.mixins.PermissionRequiredMixin`, :py:obj:`django.views.generic.edit.UpdateView`


   .. note:: This view is restricted to users with the 'add_capital' permission.


   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:attribute:: form_class


   .. py:attribute:: model


   .. py:attribute:: permission_required
      :value: 'core.add_capital'



   .. py:attribute:: template_name
      :value: 'sc/port/port_update.html'



.. py:class:: Postal_stationCreate

   Bases: :py:obj:`django.contrib.auth.mixins.PermissionRequiredMixin`, :py:obj:`seshat.apps.general.mixins.PolityIdMixin`, :py:obj:`django.views.generic.edit.CreateView`


   .. note:: This view is restricted to users with the 'add_capital' permission.


   .. py:method:: get_absolute_url()

      Get the absolute URL of the view.

      :returns: The absolute URL of the view.
      :rtype: str



   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:attribute:: form_class


   .. py:attribute:: model


   .. py:attribute:: permission_required
      :value: 'core.add_capital'



   .. py:attribute:: template_name
      :value: 'sc/postal_station/postal_station_form.html'



.. py:class:: Postal_stationDelete

   Bases: :py:obj:`django.contrib.auth.mixins.PermissionRequiredMixin`, :py:obj:`django.views.generic.edit.DeleteView`


   View for deleting an existing Postal_station object.

   .. note:: This view is restricted to users with the 'add_capital' permission.


   .. py:attribute:: model


   .. py:attribute:: permission_required
      :value: 'core.add_capital'



   .. py:attribute:: success_url


   .. py:attribute:: template_name
      :value: 'core/delete_general.html'



.. py:class:: Postal_stationDetailView

   Bases: :py:obj:`django.views.generic.DetailView`


   



   .. py:attribute:: model


   .. py:attribute:: template_name
      :value: 'sc/postal_station/postal_station_detail.html'



.. py:class:: Postal_stationListView

   Bases: :py:obj:`django.views.generic.ListView`


   Paginated view for listing all the Postal_station objects.


   .. py:method:: get_absolute_url()

      Get the absolute URL of the view.

      :returns: The absolute URL of the view.
      :rtype: str



   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:attribute:: model


   .. py:attribute:: paginate_by
      :value: 10



   .. py:attribute:: template_name
      :value: 'sc/postal_station/postal_station_list.html'



.. py:class:: Postal_stationListViewAll

   Bases: :py:obj:`django.views.generic.ListView`


   



   .. py:method:: get_absolute_url()

      Get the absolute URL of the view.

      :returns: The absolute URL of the view.
      :rtype: str



   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:method:: get_queryset()


   .. py:attribute:: model


   .. py:attribute:: template_name
      :value: 'sc/postal_station/postal_station_list_all.html'



.. py:class:: Postal_stationUpdate

   Bases: :py:obj:`django.contrib.auth.mixins.PermissionRequiredMixin`, :py:obj:`django.views.generic.edit.UpdateView`


   .. note:: This view is restricted to users with the 'add_capital' permission.


   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:attribute:: form_class


   .. py:attribute:: model


   .. py:attribute:: permission_required
      :value: 'core.add_capital'



   .. py:attribute:: template_name
      :value: 'sc/postal_station/postal_station_update.html'



.. py:class:: Practical_literatureCreate

   Bases: :py:obj:`django.contrib.auth.mixins.PermissionRequiredMixin`, :py:obj:`seshat.apps.general.mixins.PolityIdMixin`, :py:obj:`django.views.generic.edit.CreateView`


   .. note:: This view is restricted to users with the 'add_capital' permission.


   .. py:method:: get_absolute_url()

      Get the absolute URL of the view.

      :returns: The absolute URL of the view.
      :rtype: str



   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:attribute:: form_class


   .. py:attribute:: model


   .. py:attribute:: permission_required
      :value: 'core.add_capital'



   .. py:attribute:: template_name
      :value: 'sc/practical_literature/practical_literature_form.html'



.. py:class:: Practical_literatureDelete

   Bases: :py:obj:`django.contrib.auth.mixins.PermissionRequiredMixin`, :py:obj:`django.views.generic.edit.DeleteView`


   View for deleting an existing Practical_literature object.

   .. note:: This view is restricted to users with the 'add_capital' permission.


   .. py:attribute:: model


   .. py:attribute:: permission_required
      :value: 'core.add_capital'



   .. py:attribute:: success_url


   .. py:attribute:: template_name
      :value: 'core/delete_general.html'



.. py:class:: Practical_literatureDetailView

   Bases: :py:obj:`django.views.generic.DetailView`


   



   .. py:attribute:: model


   .. py:attribute:: template_name
      :value: 'sc/practical_literature/practical_literature_detail.html'



.. py:class:: Practical_literatureListView

   Bases: :py:obj:`django.views.generic.ListView`


   Paginated view for listing all the Practical_literature objects.


   .. py:method:: get_absolute_url()

      Get the absolute URL of the view.

      :returns: The absolute URL of the view.
      :rtype: str



   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:attribute:: model


   .. py:attribute:: paginate_by
      :value: 10



   .. py:attribute:: template_name
      :value: 'sc/practical_literature/practical_literature_list.html'



.. py:class:: Practical_literatureListViewAll

   Bases: :py:obj:`django.views.generic.ListView`


   



   .. py:method:: get_absolute_url()

      Get the absolute URL of the view.

      :returns: The absolute URL of the view.
      :rtype: str



   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:method:: get_queryset()


   .. py:attribute:: model


   .. py:attribute:: template_name
      :value: 'sc/practical_literature/practical_literature_list_all.html'



.. py:class:: Practical_literatureUpdate

   Bases: :py:obj:`django.contrib.auth.mixins.PermissionRequiredMixin`, :py:obj:`django.views.generic.edit.UpdateView`


   .. note:: This view is restricted to users with the 'add_capital' permission.


   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:attribute:: form_class


   .. py:attribute:: model


   .. py:attribute:: permission_required
      :value: 'core.add_capital'



   .. py:attribute:: template_name
      :value: 'sc/practical_literature/practical_literature_update.html'



.. py:class:: Precious_metalCreate

   Bases: :py:obj:`django.contrib.auth.mixins.PermissionRequiredMixin`, :py:obj:`seshat.apps.general.mixins.PolityIdMixin`, :py:obj:`django.views.generic.edit.CreateView`


   .. note:: This view is restricted to users with the 'add_capital' permission.


   .. py:method:: get_absolute_url()

      Get the absolute URL of the view.

      :returns: The absolute URL of the view.
      :rtype: str



   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:attribute:: form_class


   .. py:attribute:: model


   .. py:attribute:: permission_required
      :value: 'core.add_capital'



   .. py:attribute:: template_name
      :value: 'sc/precious_metal/precious_metal_form.html'



.. py:class:: Precious_metalDelete

   Bases: :py:obj:`django.contrib.auth.mixins.PermissionRequiredMixin`, :py:obj:`django.views.generic.edit.DeleteView`


   View for deleting an existing Precious_metal object.

   .. note:: This view is restricted to users with the 'add_capital' permission.


   .. py:attribute:: model


   .. py:attribute:: permission_required
      :value: 'core.add_capital'



   .. py:attribute:: success_url


   .. py:attribute:: template_name
      :value: 'core/delete_general.html'



.. py:class:: Precious_metalDetailView

   Bases: :py:obj:`django.views.generic.DetailView`


   



   .. py:attribute:: model


   .. py:attribute:: template_name
      :value: 'sc/precious_metal/precious_metal_detail.html'



.. py:class:: Precious_metalListView

   Bases: :py:obj:`django.views.generic.ListView`


   Paginated view for listing all the Precious_metal objects.


   .. py:method:: get_absolute_url()

      Get the absolute URL of the view.

      :returns: The absolute URL of the view.
      :rtype: str



   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:attribute:: model


   .. py:attribute:: paginate_by
      :value: 10



   .. py:attribute:: template_name
      :value: 'sc/precious_metal/precious_metal_list.html'



.. py:class:: Precious_metalListViewAll

   Bases: :py:obj:`django.views.generic.ListView`


   



   .. py:method:: get_absolute_url()

      Get the absolute URL of the view.

      :returns: The absolute URL of the view.
      :rtype: str



   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:method:: get_queryset()


   .. py:attribute:: model


   .. py:attribute:: template_name
      :value: 'sc/precious_metal/precious_metal_list_all.html'



.. py:class:: Precious_metalUpdate

   Bases: :py:obj:`django.contrib.auth.mixins.PermissionRequiredMixin`, :py:obj:`django.views.generic.edit.UpdateView`


   .. note:: This view is restricted to users with the 'add_capital' permission.


   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:attribute:: form_class


   .. py:attribute:: model


   .. py:attribute:: permission_required
      :value: 'core.add_capital'



   .. py:attribute:: template_name
      :value: 'sc/precious_metal/precious_metal_update.html'



.. py:class:: Professional_lawyerCreate

   Bases: :py:obj:`django.contrib.auth.mixins.PermissionRequiredMixin`, :py:obj:`seshat.apps.general.mixins.PolityIdMixin`, :py:obj:`django.views.generic.edit.CreateView`


   .. note:: This view is restricted to users with the 'add_capital' permission.


   .. py:method:: get_absolute_url()

      Get the absolute URL of the view.

      :returns: The absolute URL of the view.
      :rtype: str



   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:attribute:: form_class


   .. py:attribute:: model


   .. py:attribute:: permission_required
      :value: 'core.add_capital'



   .. py:attribute:: template_name
      :value: 'sc/professional_lawyer/professional_lawyer_form.html'



.. py:class:: Professional_lawyerDelete

   Bases: :py:obj:`django.contrib.auth.mixins.PermissionRequiredMixin`, :py:obj:`django.views.generic.edit.DeleteView`


   View for deleting an existing Professional_lawyer object.

   .. note:: This view is restricted to users with the 'add_capital' permission.


   .. py:attribute:: model


   .. py:attribute:: permission_required
      :value: 'core.add_capital'



   .. py:attribute:: success_url


   .. py:attribute:: template_name
      :value: 'core/delete_general.html'



.. py:class:: Professional_lawyerDetailView

   Bases: :py:obj:`django.views.generic.DetailView`


   



   .. py:attribute:: model


   .. py:attribute:: template_name
      :value: 'sc/professional_lawyer/professional_lawyer_detail.html'



.. py:class:: Professional_lawyerListView

   Bases: :py:obj:`django.views.generic.ListView`


   Paginated view for listing all the Professional_lawyer objects.


   .. py:method:: get_absolute_url()

      Get the absolute URL of the view.

      :returns: The absolute URL of the view.
      :rtype: str



   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:attribute:: model


   .. py:attribute:: paginate_by
      :value: 10



   .. py:attribute:: template_name
      :value: 'sc/professional_lawyer/professional_lawyer_list.html'



.. py:class:: Professional_lawyerListViewAll

   Bases: :py:obj:`django.views.generic.ListView`


   



   .. py:method:: get_absolute_url()

      Get the absolute URL of the view.

      :returns: The absolute URL of the view.
      :rtype: str



   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:method:: get_queryset()


   .. py:attribute:: model


   .. py:attribute:: template_name
      :value: 'sc/professional_lawyer/professional_lawyer_list_all.html'



.. py:class:: Professional_lawyerUpdate

   Bases: :py:obj:`django.contrib.auth.mixins.PermissionRequiredMixin`, :py:obj:`django.views.generic.edit.UpdateView`


   .. note:: This view is restricted to users with the 'add_capital' permission.


   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:attribute:: form_class


   .. py:attribute:: model


   .. py:attribute:: permission_required
      :value: 'core.add_capital'



   .. py:attribute:: template_name
      :value: 'sc/professional_lawyer/professional_lawyer_update.html'



.. py:class:: Professional_military_officerCreate

   Bases: :py:obj:`django.contrib.auth.mixins.PermissionRequiredMixin`, :py:obj:`seshat.apps.general.mixins.PolityIdMixin`, :py:obj:`django.views.generic.edit.CreateView`


   .. note:: This view is restricted to users with the 'add_capital' permission.


   .. py:method:: get_absolute_url()

      Get the absolute URL of the view.

      :returns: The absolute URL of the view.
      :rtype: str



   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:attribute:: form_class


   .. py:attribute:: model


   .. py:attribute:: permission_required
      :value: 'core.add_capital'



   .. py:attribute:: template_name
      :value: 'sc/professional_military_officer/professional_military_officer_form.html'



.. py:class:: Professional_military_officerDelete

   Bases: :py:obj:`django.contrib.auth.mixins.PermissionRequiredMixin`, :py:obj:`django.views.generic.edit.DeleteView`


   View for deleting an existing Professional_military_officer object.

   .. note:: This view is restricted to users with the 'add_capital' permission.


   .. py:attribute:: model


   .. py:attribute:: permission_required
      :value: 'core.add_capital'



   .. py:attribute:: success_url


   .. py:attribute:: template_name
      :value: 'core/delete_general.html'



.. py:class:: Professional_military_officerDetailView

   Bases: :py:obj:`django.views.generic.DetailView`


   



   .. py:attribute:: model


   .. py:attribute:: template_name
      :value: 'sc/professional_military_officer/professional_military_officer_detail.html'



.. py:class:: Professional_military_officerListView

   Bases: :py:obj:`django.views.generic.ListView`


   Paginated view for listing all the Professional_military_officer objects.


   .. py:method:: get_absolute_url()

      Get the absolute URL of the view.

      :returns: The absolute URL of the view.
      :rtype: str



   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:attribute:: model


   .. py:attribute:: paginate_by
      :value: 10



   .. py:attribute:: template_name
      :value: 'sc/professional_military_officer/professional_military_officer_list.html'



.. py:class:: Professional_military_officerListViewAll

   Bases: :py:obj:`django.views.generic.ListView`


   



   .. py:method:: get_absolute_url()

      Get the absolute URL of the view.

      :returns: The absolute URL of the view.
      :rtype: str



   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:method:: get_queryset()


   .. py:attribute:: model


   .. py:attribute:: template_name
      :value: 'sc/professional_military_officer/professional_military_officer_list_all.html'



.. py:class:: Professional_military_officerUpdate

   Bases: :py:obj:`django.contrib.auth.mixins.PermissionRequiredMixin`, :py:obj:`django.views.generic.edit.UpdateView`


   .. note:: This view is restricted to users with the 'add_capital' permission.


   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:attribute:: form_class


   .. py:attribute:: model


   .. py:attribute:: permission_required
      :value: 'core.add_capital'



   .. py:attribute:: template_name
      :value: 'sc/professional_military_officer/professional_military_officer_update.html'



.. py:class:: Professional_priesthoodCreate

   Bases: :py:obj:`django.contrib.auth.mixins.PermissionRequiredMixin`, :py:obj:`seshat.apps.general.mixins.PolityIdMixin`, :py:obj:`django.views.generic.edit.CreateView`


   .. note:: This view is restricted to users with the 'add_capital' permission.


   .. py:method:: get_absolute_url()

      Get the absolute URL of the view.

      :returns: The absolute URL of the view.
      :rtype: str



   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:attribute:: form_class


   .. py:attribute:: model


   .. py:attribute:: permission_required
      :value: 'core.add_capital'



   .. py:attribute:: template_name
      :value: 'sc/professional_priesthood/professional_priesthood_form.html'



.. py:class:: Professional_priesthoodDelete

   Bases: :py:obj:`django.contrib.auth.mixins.PermissionRequiredMixin`, :py:obj:`django.views.generic.edit.DeleteView`


   View for deleting an existing Professional_priesthood object.

   .. note:: This view is restricted to users with the 'add_capital' permission.


   .. py:attribute:: model


   .. py:attribute:: permission_required
      :value: 'core.add_capital'



   .. py:attribute:: success_url


   .. py:attribute:: template_name
      :value: 'core/delete_general.html'



.. py:class:: Professional_priesthoodDetailView

   Bases: :py:obj:`django.views.generic.DetailView`


   



   .. py:attribute:: model


   .. py:attribute:: template_name
      :value: 'sc/professional_priesthood/professional_priesthood_detail.html'



.. py:class:: Professional_priesthoodListView

   Bases: :py:obj:`django.views.generic.ListView`


   Paginated view for listing all the Professional_priesthood objects.


   .. py:method:: get_absolute_url()

      Get the absolute URL of the view.

      :returns: The absolute URL of the view.
      :rtype: str



   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:attribute:: model


   .. py:attribute:: paginate_by
      :value: 10



   .. py:attribute:: template_name
      :value: 'sc/professional_priesthood/professional_priesthood_list.html'



.. py:class:: Professional_priesthoodListViewAll

   Bases: :py:obj:`django.views.generic.ListView`


   



   .. py:method:: get_absolute_url()

      Get the absolute URL of the view.

      :returns: The absolute URL of the view.
      :rtype: str



   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:method:: get_queryset()


   .. py:attribute:: model


   .. py:attribute:: template_name
      :value: 'sc/professional_priesthood/professional_priesthood_list_all.html'



.. py:class:: Professional_priesthoodUpdate

   Bases: :py:obj:`django.contrib.auth.mixins.PermissionRequiredMixin`, :py:obj:`django.views.generic.edit.UpdateView`


   .. note:: This view is restricted to users with the 'add_capital' permission.


   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:attribute:: form_class


   .. py:attribute:: model


   .. py:attribute:: permission_required
      :value: 'core.add_capital'



   .. py:attribute:: template_name
      :value: 'sc/professional_priesthood/professional_priesthood_update.html'



.. py:class:: Professional_soldierCreate

   Bases: :py:obj:`django.contrib.auth.mixins.PermissionRequiredMixin`, :py:obj:`seshat.apps.general.mixins.PolityIdMixin`, :py:obj:`django.views.generic.edit.CreateView`


   .. note:: This view is restricted to users with the 'add_capital' permission.


   .. py:method:: get_absolute_url()

      Get the absolute URL of the view.

      :returns: The absolute URL of the view.
      :rtype: str



   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:attribute:: form_class


   .. py:attribute:: model


   .. py:attribute:: permission_required
      :value: 'core.add_capital'



   .. py:attribute:: template_name
      :value: 'sc/professional_soldier/professional_soldier_form.html'



.. py:class:: Professional_soldierDelete

   Bases: :py:obj:`django.contrib.auth.mixins.PermissionRequiredMixin`, :py:obj:`django.views.generic.edit.DeleteView`


   View for deleting an existing Professional_soldier object.

   .. note:: This view is restricted to users with the 'add_capital' permission.


   .. py:attribute:: model


   .. py:attribute:: permission_required
      :value: 'core.add_capital'



   .. py:attribute:: success_url


   .. py:attribute:: template_name
      :value: 'core/delete_general.html'



.. py:class:: Professional_soldierDetailView

   Bases: :py:obj:`django.views.generic.DetailView`


   



   .. py:attribute:: model


   .. py:attribute:: template_name
      :value: 'sc/professional_soldier/professional_soldier_detail.html'



.. py:class:: Professional_soldierListView

   Bases: :py:obj:`django.views.generic.ListView`


   Paginated view for listing all the Professional_soldier objects.


   .. py:method:: get_absolute_url()

      Get the absolute URL of the view.

      :returns: The absolute URL of the view.
      :rtype: str



   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:attribute:: model


   .. py:attribute:: paginate_by
      :value: 10



   .. py:attribute:: template_name
      :value: 'sc/professional_soldier/professional_soldier_list.html'



.. py:class:: Professional_soldierListViewAll

   Bases: :py:obj:`django.views.generic.ListView`


   



   .. py:method:: get_absolute_url()

      Get the absolute URL of the view.

      :returns: The absolute URL of the view.
      :rtype: str



   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:method:: get_queryset()


   .. py:attribute:: model


   .. py:attribute:: template_name
      :value: 'sc/professional_soldier/professional_soldier_list_all.html'



.. py:class:: Professional_soldierUpdate

   Bases: :py:obj:`django.contrib.auth.mixins.PermissionRequiredMixin`, :py:obj:`django.views.generic.edit.UpdateView`


   .. note:: This view is restricted to users with the 'add_capital' permission.


   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:attribute:: form_class


   .. py:attribute:: model


   .. py:attribute:: permission_required
      :value: 'core.add_capital'



   .. py:attribute:: template_name
      :value: 'sc/professional_soldier/professional_soldier_update.html'



.. py:class:: RaCreate

   Bases: :py:obj:`django.contrib.auth.mixins.PermissionRequiredMixin`, :py:obj:`django.views.generic.edit.CreateView`


   View for creating a new Ra object.

   .. note:: This view is restricted to users with the 'add_capital' permission.


   .. py:method:: get_absolute_url()

      Get the absolute URL of the view.

      :returns: The absolute URL of the view.
      :rtype: str



   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:attribute:: form_class


   .. py:attribute:: model


   .. py:attribute:: permission_required
      :value: 'core.add_capital'



   .. py:attribute:: template_name
      :value: 'sc/ra/ra_form.html'



.. py:class:: RaDelete

   Bases: :py:obj:`django.contrib.auth.mixins.PermissionRequiredMixin`, :py:obj:`django.views.generic.edit.DeleteView`


   View for deleting an existing Ra object.

   .. note:: This view is restricted to users with the 'add_capital' permission.


   .. py:attribute:: model


   .. py:attribute:: permission_required
      :value: 'core.add_capital'



   .. py:attribute:: success_url


   .. py:attribute:: template_name
      :value: 'core/delete_general.html'



.. py:class:: RaDetailView

   Bases: :py:obj:`django.views.generic.DetailView`


   View for displaying the details of a Ra object.


   .. py:attribute:: model


   .. py:attribute:: template_name
      :value: 'sc/ra/ra_detail.html'



.. py:class:: RaListView

   Bases: :py:obj:`django.views.generic.ListView`


   Paginated view for listing all the Ra objects.


   .. py:method:: get_absolute_url()

      Get the absolute URL of the view.

      :returns: The absolute URL of the view.
      :rtype: str



   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:attribute:: model


   .. py:attribute:: paginate_by
      :value: 10



   .. py:attribute:: template_name
      :value: 'sc/ra/ra_list.html'



.. py:class:: RaListViewAll

   Bases: :py:obj:`django.views.generic.ListView`


   View for listing all the Ra objects.


   .. py:method:: get_absolute_url()


   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:method:: get_queryset()


   .. py:attribute:: model


   .. py:attribute:: template_name
      :value: 'sc/ra/ra_list_all.html'



.. py:class:: RaUpdate

   Bases: :py:obj:`django.contrib.auth.mixins.PermissionRequiredMixin`, :py:obj:`django.views.generic.edit.UpdateView`


   View for updating an existing Ra object.

   .. note:: This view is restricted to users with the 'add_capital' permission.


   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:attribute:: form_class


   .. py:attribute:: model


   .. py:attribute:: permission_required
      :value: 'core.add_capital'



   .. py:attribute:: template_name
      :value: 'sc/ra/ra_update.html'



.. py:class:: Religious_levelCreate

   Bases: :py:obj:`django.contrib.auth.mixins.PermissionRequiredMixin`, :py:obj:`seshat.apps.general.mixins.PolityIdMixin`, :py:obj:`django.views.generic.edit.CreateView`


   .. note:: This view is restricted to users with the 'add_capital' permission.


   .. py:method:: get_absolute_url()

      Get the absolute URL of the view.

      :returns: The absolute URL of the view.
      :rtype: str



   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:attribute:: form_class


   .. py:attribute:: model


   .. py:attribute:: permission_required
      :value: 'core.add_capital'



   .. py:attribute:: template_name
      :value: 'sc/religious_level/religious_level_form.html'



.. py:class:: Religious_levelDelete

   Bases: :py:obj:`django.contrib.auth.mixins.PermissionRequiredMixin`, :py:obj:`django.views.generic.edit.DeleteView`


   View for deleting an existing Religious_level object.

   .. note:: This view is restricted to users with the 'add_capital' permission.


   .. py:attribute:: model


   .. py:attribute:: permission_required
      :value: 'core.add_capital'



   .. py:attribute:: success_url


   .. py:attribute:: template_name
      :value: 'core/delete_general.html'



.. py:class:: Religious_levelDetailView

   Bases: :py:obj:`django.views.generic.DetailView`


   



   .. py:attribute:: model


   .. py:attribute:: template_name
      :value: 'sc/religious_level/religious_level_detail.html'



.. py:class:: Religious_levelListView

   Bases: :py:obj:`django.views.generic.ListView`


   Paginated view for listing all the Religious_level objects.


   .. py:method:: get_absolute_url()

      Get the absolute URL of the view.

      :returns: The absolute URL of the view.
      :rtype: str



   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:attribute:: model


   .. py:attribute:: paginate_by
      :value: 10



   .. py:attribute:: template_name
      :value: 'sc/religious_level/religious_level_list.html'



.. py:class:: Religious_levelListViewAll

   Bases: :py:obj:`django.views.generic.ListView`


   



   .. py:method:: get_absolute_url()

      Get the absolute URL of the view.

      :returns: The absolute URL of the view.
      :rtype: str



   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:method:: get_queryset()


   .. py:attribute:: model


   .. py:attribute:: template_name
      :value: 'sc/religious_level/religious_level_list_all.html'



.. py:class:: Religious_levelUpdate

   Bases: :py:obj:`django.contrib.auth.mixins.PermissionRequiredMixin`, :py:obj:`django.views.generic.edit.UpdateView`


   .. note:: This view is restricted to users with the 'add_capital' permission.


   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:attribute:: form_class


   .. py:attribute:: model


   .. py:attribute:: permission_required
      :value: 'core.add_capital'



   .. py:attribute:: template_name
      :value: 'sc/religious_level/religious_level_update.html'



.. py:class:: Religious_literatureCreate

   Bases: :py:obj:`django.contrib.auth.mixins.PermissionRequiredMixin`, :py:obj:`seshat.apps.general.mixins.PolityIdMixin`, :py:obj:`django.views.generic.edit.CreateView`


   .. note:: This view is restricted to users with the 'add_capital' permission.


   .. py:method:: get_absolute_url()

      Get the absolute URL of the view.

      :returns: The absolute URL of the view.
      :rtype: str



   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:attribute:: form_class


   .. py:attribute:: model


   .. py:attribute:: permission_required
      :value: 'core.add_capital'



   .. py:attribute:: template_name
      :value: 'sc/religious_literature/religious_literature_form.html'



.. py:class:: Religious_literatureDelete

   Bases: :py:obj:`django.contrib.auth.mixins.PermissionRequiredMixin`, :py:obj:`django.views.generic.edit.DeleteView`


   View for deleting an existing Religious_literature object.

   .. note:: This view is restricted to users with the 'add_capital' permission.


   .. py:attribute:: model


   .. py:attribute:: permission_required
      :value: 'core.add_capital'



   .. py:attribute:: success_url


   .. py:attribute:: template_name
      :value: 'core/delete_general.html'



.. py:class:: Religious_literatureDetailView

   Bases: :py:obj:`django.views.generic.DetailView`


   



   .. py:attribute:: model


   .. py:attribute:: template_name
      :value: 'sc/religious_literature/religious_literature_detail.html'



.. py:class:: Religious_literatureListView

   Bases: :py:obj:`django.views.generic.ListView`


   Paginated view for listing all the Religious_literature objects.


   .. py:method:: get_absolute_url()

      Get the absolute URL of the view.

      :returns: The absolute URL of the view.
      :rtype: str



   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:attribute:: model


   .. py:attribute:: paginate_by
      :value: 10



   .. py:attribute:: template_name
      :value: 'sc/religious_literature/religious_literature_list.html'



.. py:class:: Religious_literatureListViewAll

   Bases: :py:obj:`django.views.generic.ListView`


   



   .. py:method:: get_absolute_url()

      Get the absolute URL of the view.

      :returns: The absolute URL of the view.
      :rtype: str



   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:method:: get_queryset()


   .. py:attribute:: model


   .. py:attribute:: template_name
      :value: 'sc/religious_literature/religious_literature_list_all.html'



.. py:class:: Religious_literatureUpdate

   Bases: :py:obj:`django.contrib.auth.mixins.PermissionRequiredMixin`, :py:obj:`django.views.generic.edit.UpdateView`


   .. note:: This view is restricted to users with the 'add_capital' permission.


   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:attribute:: form_class


   .. py:attribute:: model


   .. py:attribute:: permission_required
      :value: 'core.add_capital'



   .. py:attribute:: template_name
      :value: 'sc/religious_literature/religious_literature_update.html'



.. py:class:: RoadCreate

   Bases: :py:obj:`django.contrib.auth.mixins.PermissionRequiredMixin`, :py:obj:`seshat.apps.general.mixins.PolityIdMixin`, :py:obj:`django.views.generic.edit.CreateView`


   .. note:: This view is restricted to users with the 'add_capital' permission.


   .. py:method:: get_absolute_url()

      Get the absolute URL of the view.

      :returns: The absolute URL of the view.
      :rtype: str



   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:attribute:: form_class


   .. py:attribute:: model


   .. py:attribute:: permission_required
      :value: 'core.add_capital'



   .. py:attribute:: template_name
      :value: 'sc/road/road_form.html'



.. py:class:: RoadDelete

   Bases: :py:obj:`django.contrib.auth.mixins.PermissionRequiredMixin`, :py:obj:`django.views.generic.edit.DeleteView`


   View for deleting an existing Road object.

   .. note:: This view is restricted to users with the 'add_capital' permission.


   .. py:attribute:: model


   .. py:attribute:: permission_required
      :value: 'core.add_capital'



   .. py:attribute:: success_url


   .. py:attribute:: template_name
      :value: 'core/delete_general.html'



.. py:class:: RoadDetailView

   Bases: :py:obj:`django.views.generic.DetailView`


   



   .. py:attribute:: model


   .. py:attribute:: template_name
      :value: 'sc/road/road_detail.html'



.. py:class:: RoadListView

   Bases: :py:obj:`django.views.generic.ListView`


   Paginated view for listing all the Road objects.


   .. py:method:: get_absolute_url()

      Get the absolute URL of the view.

      :returns: The absolute URL of the view.
      :rtype: str



   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:attribute:: model


   .. py:attribute:: paginate_by
      :value: 10



   .. py:attribute:: template_name
      :value: 'sc/road/road_list.html'



.. py:class:: RoadListViewAll

   Bases: :py:obj:`django.views.generic.ListView`


   



   .. py:method:: get_absolute_url()

      Get the absolute URL of the view.

      :returns: The absolute URL of the view.
      :rtype: str



   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:method:: get_queryset()


   .. py:attribute:: model


   .. py:attribute:: template_name
      :value: 'sc/road/road_list_all.html'



.. py:class:: RoadUpdate

   Bases: :py:obj:`django.contrib.auth.mixins.PermissionRequiredMixin`, :py:obj:`django.views.generic.edit.UpdateView`


   .. note:: This view is restricted to users with the 'add_capital' permission.


   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:attribute:: form_class


   .. py:attribute:: model


   .. py:attribute:: permission_required
      :value: 'core.add_capital'



   .. py:attribute:: template_name
      :value: 'sc/road/road_update.html'



.. py:class:: Sacred_textCreate

   Bases: :py:obj:`django.contrib.auth.mixins.PermissionRequiredMixin`, :py:obj:`seshat.apps.general.mixins.PolityIdMixin`, :py:obj:`django.views.generic.edit.CreateView`


   .. note:: This view is restricted to users with the 'add_capital' permission.


   .. py:method:: get_absolute_url()

      Get the absolute URL of the view.

      :returns: The absolute URL of the view.
      :rtype: str



   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:attribute:: form_class


   .. py:attribute:: model


   .. py:attribute:: permission_required
      :value: 'core.add_capital'



   .. py:attribute:: template_name
      :value: 'sc/sacred_text/sacred_text_form.html'



.. py:class:: Sacred_textDelete

   Bases: :py:obj:`django.contrib.auth.mixins.PermissionRequiredMixin`, :py:obj:`django.views.generic.edit.DeleteView`


   View for deleting an existing Sacred_text object.

   .. note:: This view is restricted to users with the 'add_capital' permission.


   .. py:attribute:: model


   .. py:attribute:: permission_required
      :value: 'core.add_capital'



   .. py:attribute:: success_url


   .. py:attribute:: template_name
      :value: 'core/delete_general.html'



.. py:class:: Sacred_textDetailView

   Bases: :py:obj:`django.views.generic.DetailView`


   



   .. py:attribute:: model


   .. py:attribute:: template_name
      :value: 'sc/sacred_text/sacred_text_detail.html'



.. py:class:: Sacred_textListView

   Bases: :py:obj:`django.views.generic.ListView`


   Paginated view for listing all the Sacred_text objects.


   .. py:method:: get_absolute_url()

      Get the absolute URL of the view.

      :returns: The absolute URL of the view.
      :rtype: str



   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:attribute:: model


   .. py:attribute:: paginate_by
      :value: 10



   .. py:attribute:: template_name
      :value: 'sc/sacred_text/sacred_text_list.html'



.. py:class:: Sacred_textListViewAll

   Bases: :py:obj:`django.views.generic.ListView`


   



   .. py:method:: get_absolute_url()

      Get the absolute URL of the view.

      :returns: The absolute URL of the view.
      :rtype: str



   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:method:: get_queryset()


   .. py:attribute:: model


   .. py:attribute:: template_name
      :value: 'sc/sacred_text/sacred_text_list_all.html'



.. py:class:: Sacred_textUpdate

   Bases: :py:obj:`django.contrib.auth.mixins.PermissionRequiredMixin`, :py:obj:`django.views.generic.edit.UpdateView`


   .. note:: This view is restricted to users with the 'add_capital' permission.


   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:attribute:: form_class


   .. py:attribute:: model


   .. py:attribute:: permission_required
      :value: 'core.add_capital'



   .. py:attribute:: template_name
      :value: 'sc/sacred_text/sacred_text_update.html'



.. py:class:: Scientific_literatureCreate

   Bases: :py:obj:`django.contrib.auth.mixins.PermissionRequiredMixin`, :py:obj:`seshat.apps.general.mixins.PolityIdMixin`, :py:obj:`django.views.generic.edit.CreateView`


   .. note:: This view is restricted to users with the 'add_capital' permission.


   .. py:method:: get_absolute_url()

      Get the absolute URL of the view.

      :returns: The absolute URL of the view.
      :rtype: str



   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:attribute:: form_class


   .. py:attribute:: model


   .. py:attribute:: permission_required
      :value: 'core.add_capital'



   .. py:attribute:: template_name
      :value: 'sc/scientific_literature/scientific_literature_form.html'



.. py:class:: Scientific_literatureDelete

   Bases: :py:obj:`django.contrib.auth.mixins.PermissionRequiredMixin`, :py:obj:`django.views.generic.edit.DeleteView`


   View for deleting an existing Scientific_literature object.

   .. note:: This view is restricted to users with the 'add_capital' permission.


   .. py:attribute:: model


   .. py:attribute:: permission_required
      :value: 'core.add_capital'



   .. py:attribute:: success_url


   .. py:attribute:: template_name
      :value: 'core/delete_general.html'



.. py:class:: Scientific_literatureDetailView

   Bases: :py:obj:`django.views.generic.DetailView`


   



   .. py:attribute:: model


   .. py:attribute:: template_name
      :value: 'sc/scientific_literature/scientific_literature_detail.html'



.. py:class:: Scientific_literatureListView

   Bases: :py:obj:`django.views.generic.ListView`


   Paginated view for listing all the Scientific_literature objects.


   .. py:method:: get_absolute_url()

      Get the absolute URL of the view.

      :returns: The absolute URL of the view.
      :rtype: str



   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:attribute:: model


   .. py:attribute:: paginate_by
      :value: 10



   .. py:attribute:: template_name
      :value: 'sc/scientific_literature/scientific_literature_list.html'



.. py:class:: Scientific_literatureListViewAll

   Bases: :py:obj:`django.views.generic.ListView`


   



   .. py:method:: get_absolute_url()

      Get the absolute URL of the view.

      :returns: The absolute URL of the view.
      :rtype: str



   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:method:: get_queryset()


   .. py:attribute:: model


   .. py:attribute:: template_name
      :value: 'sc/scientific_literature/scientific_literature_list_all.html'



.. py:class:: Scientific_literatureUpdate

   Bases: :py:obj:`django.contrib.auth.mixins.PermissionRequiredMixin`, :py:obj:`django.views.generic.edit.UpdateView`


   .. note:: This view is restricted to users with the 'add_capital' permission.


   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:attribute:: form_class


   .. py:attribute:: model


   .. py:attribute:: permission_required
      :value: 'core.add_capital'



   .. py:attribute:: template_name
      :value: 'sc/scientific_literature/scientific_literature_update.html'



.. py:class:: ScriptCreate

   Bases: :py:obj:`django.contrib.auth.mixins.PermissionRequiredMixin`, :py:obj:`seshat.apps.general.mixins.PolityIdMixin`, :py:obj:`django.views.generic.edit.CreateView`


   .. note:: This view is restricted to users with the 'add_capital' permission.


   .. py:method:: get_absolute_url()

      Get the absolute URL of the view.

      :returns: The absolute URL of the view.
      :rtype: str



   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:attribute:: form_class


   .. py:attribute:: model


   .. py:attribute:: permission_required
      :value: 'core.add_capital'



   .. py:attribute:: template_name
      :value: 'sc/script/script_form.html'



.. py:class:: ScriptDelete

   Bases: :py:obj:`django.contrib.auth.mixins.PermissionRequiredMixin`, :py:obj:`django.views.generic.edit.DeleteView`


   View for deleting an existing Script object.

   .. note:: This view is restricted to users with the 'add_capital' permission.


   .. py:attribute:: model


   .. py:attribute:: permission_required
      :value: 'core.add_capital'



   .. py:attribute:: success_url


   .. py:attribute:: template_name
      :value: 'core/delete_general.html'



.. py:class:: ScriptDetailView

   Bases: :py:obj:`django.views.generic.DetailView`


   



   .. py:attribute:: model


   .. py:attribute:: template_name
      :value: 'sc/script/script_detail.html'



.. py:class:: ScriptListView

   Bases: :py:obj:`django.views.generic.ListView`


   Paginated view for listing all the Script objects.


   .. py:method:: get_absolute_url()

      Get the absolute URL of the view.

      :returns: The absolute URL of the view.
      :rtype: str



   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:attribute:: model


   .. py:attribute:: paginate_by
      :value: 10



   .. py:attribute:: template_name
      :value: 'sc/script/script_list.html'



.. py:class:: ScriptListViewAll

   Bases: :py:obj:`django.views.generic.ListView`


   



   .. py:method:: get_absolute_url()

      Get the absolute URL of the view.

      :returns: The absolute URL of the view.
      :rtype: str



   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:method:: get_queryset()


   .. py:attribute:: model


   .. py:attribute:: template_name
      :value: 'sc/script/script_list_all.html'



.. py:class:: ScriptUpdate

   Bases: :py:obj:`django.contrib.auth.mixins.PermissionRequiredMixin`, :py:obj:`django.views.generic.edit.UpdateView`


   .. note:: This view is restricted to users with the 'add_capital' permission.


   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:attribute:: form_class


   .. py:attribute:: model


   .. py:attribute:: permission_required
      :value: 'core.add_capital'



   .. py:attribute:: template_name
      :value: 'sc/script/script_update.html'



.. py:class:: Settlement_hierarchyCreate

   Bases: :py:obj:`django.contrib.auth.mixins.PermissionRequiredMixin`, :py:obj:`seshat.apps.general.mixins.PolityIdMixin`, :py:obj:`django.views.generic.edit.CreateView`


   .. note:: This view is restricted to users with the 'add_capital' permission.


   .. py:method:: get_absolute_url()

      Get the absolute URL of the view.

      :returns: The absolute URL of the view.
      :rtype: str



   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:attribute:: form_class


   .. py:attribute:: model


   .. py:attribute:: permission_required
      :value: 'core.add_capital'



   .. py:attribute:: template_name
      :value: 'sc/settlement_hierarchy/settlement_hierarchy_form.html'



.. py:class:: Settlement_hierarchyDelete

   Bases: :py:obj:`django.contrib.auth.mixins.PermissionRequiredMixin`, :py:obj:`django.views.generic.edit.DeleteView`


   View for deleting an existing Settlement_hierarchy object.

   .. note:: This view is restricted to users with the 'add_capital' permission.


   .. py:attribute:: model


   .. py:attribute:: permission_required
      :value: 'core.add_capital'



   .. py:attribute:: success_url


   .. py:attribute:: template_name
      :value: 'core/delete_general.html'



.. py:class:: Settlement_hierarchyDetailView

   Bases: :py:obj:`django.views.generic.DetailView`


   



   .. py:attribute:: model


   .. py:attribute:: template_name
      :value: 'sc/settlement_hierarchy/settlement_hierarchy_detail.html'



.. py:class:: Settlement_hierarchyListView

   Bases: :py:obj:`django.views.generic.ListView`


   Paginated view for listing all the Settlement_hierarchy objects.


   .. py:method:: get_absolute_url()

      Get the absolute URL of the view.

      :returns: The absolute URL of the view.
      :rtype: str



   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:attribute:: model


   .. py:attribute:: paginate_by
      :value: 10



   .. py:attribute:: template_name
      :value: 'sc/settlement_hierarchy/settlement_hierarchy_list.html'



.. py:class:: Settlement_hierarchyListViewAll

   Bases: :py:obj:`django.views.generic.ListView`


   



   .. py:method:: get_absolute_url()

      Get the absolute URL of the view.

      :returns: The absolute URL of the view.
      :rtype: str



   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:method:: get_queryset()


   .. py:attribute:: model


   .. py:attribute:: template_name
      :value: 'sc/settlement_hierarchy/settlement_hierarchy_list_all.html'



.. py:class:: Settlement_hierarchyUpdate

   Bases: :py:obj:`django.contrib.auth.mixins.PermissionRequiredMixin`, :py:obj:`django.views.generic.edit.UpdateView`


   .. note:: This view is restricted to users with the 'add_capital' permission.


   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:attribute:: form_class


   .. py:attribute:: model


   .. py:attribute:: permission_required
      :value: 'core.add_capital'



   .. py:attribute:: template_name
      :value: 'sc/settlement_hierarchy/settlement_hierarchy_update.html'



.. py:class:: Specialized_government_buildingCreate

   Bases: :py:obj:`django.contrib.auth.mixins.PermissionRequiredMixin`, :py:obj:`seshat.apps.general.mixins.PolityIdMixin`, :py:obj:`django.views.generic.edit.CreateView`


   .. note:: This view is restricted to users with the 'add_capital' permission.


   .. py:method:: get_absolute_url()

      Get the absolute URL of the view.

      :returns: The absolute URL of the view.
      :rtype: str



   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:attribute:: form_class


   .. py:attribute:: model


   .. py:attribute:: permission_required
      :value: 'core.add_capital'



   .. py:attribute:: template_name
      :value: 'sc/specialized_government_building/specialized_government_building_form.html'



.. py:class:: Specialized_government_buildingDelete

   Bases: :py:obj:`django.contrib.auth.mixins.PermissionRequiredMixin`, :py:obj:`django.views.generic.edit.DeleteView`


   View for deleting an existing Specialized_government_building object.

   .. note:: This view is restricted to users with the 'add_capital' permission.


   .. py:attribute:: model


   .. py:attribute:: permission_required
      :value: 'core.add_capital'



   .. py:attribute:: success_url


   .. py:attribute:: template_name
      :value: 'core/delete_general.html'



.. py:class:: Specialized_government_buildingDetailView

   Bases: :py:obj:`django.views.generic.DetailView`


   



   .. py:attribute:: model


   .. py:attribute:: template_name
      :value: 'sc/specialized_government_building/specialized_government_building_detail.html'



.. py:class:: Specialized_government_buildingListView

   Bases: :py:obj:`django.views.generic.ListView`


   Paginated view for listing all the Specialized_government_building objects.


   .. py:method:: get_absolute_url()

      Get the absolute URL of the view.

      :returns: The absolute URL of the view.
      :rtype: str



   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:attribute:: model


   .. py:attribute:: paginate_by
      :value: 10



   .. py:attribute:: template_name
      :value: 'sc/specialized_government_building/specialized_government_building_list.html'



.. py:class:: Specialized_government_buildingListViewAll

   Bases: :py:obj:`django.views.generic.ListView`


   



   .. py:method:: get_absolute_url()

      Get the absolute URL of the view.

      :returns: The absolute URL of the view.
      :rtype: str



   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:method:: get_queryset()


   .. py:attribute:: model


   .. py:attribute:: template_name
      :value: 'sc/specialized_government_building/specialized_government_building_list_all.html'



.. py:class:: Specialized_government_buildingUpdate

   Bases: :py:obj:`django.contrib.auth.mixins.PermissionRequiredMixin`, :py:obj:`django.views.generic.edit.UpdateView`


   .. note:: This view is restricted to users with the 'add_capital' permission.


   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:attribute:: form_class


   .. py:attribute:: model


   .. py:attribute:: permission_required
      :value: 'core.add_capital'



   .. py:attribute:: template_name
      :value: 'sc/specialized_government_building/specialized_government_building_update.html'



.. py:class:: TokenCreate

   Bases: :py:obj:`django.contrib.auth.mixins.PermissionRequiredMixin`, :py:obj:`seshat.apps.general.mixins.PolityIdMixin`, :py:obj:`django.views.generic.edit.CreateView`


   .. note:: This view is restricted to users with the 'add_capital' permission.


   .. py:method:: get_absolute_url()

      Get the absolute URL of the view.

      :returns: The absolute URL of the view.
      :rtype: str



   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:attribute:: form_class


   .. py:attribute:: model


   .. py:attribute:: permission_required
      :value: 'core.add_capital'



   .. py:attribute:: template_name
      :value: 'sc/token/token_form.html'



.. py:class:: TokenDelete

   Bases: :py:obj:`django.contrib.auth.mixins.PermissionRequiredMixin`, :py:obj:`django.views.generic.edit.DeleteView`


   View for deleting an existing Token object.

   .. note:: This view is restricted to users with the 'add_capital' permission.


   .. py:attribute:: model


   .. py:attribute:: permission_required
      :value: 'core.add_capital'



   .. py:attribute:: success_url


   .. py:attribute:: template_name
      :value: 'core/delete_general.html'



.. py:class:: TokenDetailView

   Bases: :py:obj:`django.views.generic.DetailView`


   



   .. py:attribute:: model


   .. py:attribute:: template_name
      :value: 'sc/token/token_detail.html'



.. py:class:: TokenListView

   Bases: :py:obj:`django.views.generic.ListView`


   Paginated view for listing all the Token objects.


   .. py:method:: get_absolute_url()

      Get the absolute URL of the view.

      :returns: The absolute URL of the view.
      :rtype: str



   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:attribute:: model


   .. py:attribute:: paginate_by
      :value: 10



   .. py:attribute:: template_name
      :value: 'sc/token/token_list.html'



.. py:class:: TokenListViewAll

   Bases: :py:obj:`django.views.generic.ListView`


   



   .. py:method:: get_absolute_url()

      Get the absolute URL of the view.

      :returns: The absolute URL of the view.
      :rtype: str



   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:method:: get_queryset()


   .. py:attribute:: model


   .. py:attribute:: template_name
      :value: 'sc/token/token_list_all.html'



.. py:class:: TokenUpdate

   Bases: :py:obj:`django.contrib.auth.mixins.PermissionRequiredMixin`, :py:obj:`django.views.generic.edit.UpdateView`


   



   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:attribute:: form_class


   .. py:attribute:: model


   .. py:attribute:: permission_required
      :value: 'core.add_capital'



   .. py:attribute:: template_name
      :value: 'sc/token/token_update.html'



.. py:class:: Written_recordCreate

   Bases: :py:obj:`django.contrib.auth.mixins.PermissionRequiredMixin`, :py:obj:`seshat.apps.general.mixins.PolityIdMixin`, :py:obj:`django.views.generic.edit.CreateView`


   .. note:: This view is restricted to users with the 'add_capital' permission.


   .. py:method:: get_absolute_url()

      Get the absolute URL of the view.

      :returns: The absolute URL of the view.
      :rtype: str



   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:attribute:: form_class


   .. py:attribute:: model


   .. py:attribute:: permission_required
      :value: 'core.add_capital'



   .. py:attribute:: template_name
      :value: 'sc/written_record/written_record_form.html'



.. py:class:: Written_recordDelete

   Bases: :py:obj:`django.contrib.auth.mixins.PermissionRequiredMixin`, :py:obj:`django.views.generic.edit.DeleteView`


   View for deleting an existing Written_record object.

   .. note:: This view is restricted to users with the 'add_capital' permission.


   .. py:attribute:: model


   .. py:attribute:: permission_required
      :value: 'core.add_capital'



   .. py:attribute:: success_url


   .. py:attribute:: template_name
      :value: 'core/delete_general.html'



.. py:class:: Written_recordDetailView

   Bases: :py:obj:`django.views.generic.DetailView`


   



   .. py:attribute:: model


   .. py:attribute:: template_name
      :value: 'sc/written_record/written_record_detail.html'



.. py:class:: Written_recordListView

   Bases: :py:obj:`django.views.generic.ListView`


   Paginated view for listing all the Written_record objects.


   .. py:method:: get_absolute_url()

      Get the absolute URL of the view.

      :returns: The absolute URL of the view.
      :rtype: str



   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:attribute:: model


   .. py:attribute:: paginate_by
      :value: 10



   .. py:attribute:: template_name
      :value: 'sc/written_record/written_record_list.html'



.. py:class:: Written_recordListViewAll

   Bases: :py:obj:`django.views.generic.ListView`


   



   .. py:method:: get_absolute_url()

      Get the absolute URL of the view.

      :returns: The absolute URL of the view.
      :rtype: str



   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:method:: get_queryset()


   .. py:attribute:: model


   .. py:attribute:: template_name
      :value: 'sc/written_record/written_record_list_all.html'



.. py:class:: Written_recordUpdate

   Bases: :py:obj:`django.contrib.auth.mixins.PermissionRequiredMixin`, :py:obj:`django.views.generic.edit.UpdateView`


   .. note:: This view is restricted to users with the 'add_capital' permission.


   .. py:method:: get_context_data(**kwargs)

      Get the context data of the view.

      :noindex:

      :param \*\*kwargs: Arbitrary keyword arguments.

      :returns: The context data of the view.
      :rtype: dict



   .. py:attribute:: form_class


   .. py:attribute:: model


   .. py:attribute:: permission_required
      :value: 'core.add_capital'



   .. py:attribute:: template_name
      :value: 'sc/written_record/written_record_update.html'



.. py:function:: administrative_level_download(request)

.. py:function:: administrative_level_meta_download(request)

.. py:function:: article_download(request)

.. py:function:: article_meta_download(request)

.. py:function:: bridge_download(request)

.. py:function:: bridge_meta_download(request)

.. py:function:: calendar_download(request)

.. py:function:: calendar_meta_download(request)

.. py:function:: canal_download(request)

.. py:function:: canal_meta_download(request)

.. py:function:: confirm_delete_view(request, model_class, pk, var_name)

.. py:function:: courier_download(request)

.. py:function:: courier_meta_download(request)

.. py:function:: court_download(request)

.. py:function:: court_meta_download(request)

.. py:function:: delete_object_view(request, model_class, pk, var_name)

.. py:function:: download_csv_all_sc(request)

.. py:function:: download_csv_bureaucracy_characteristics(request)

.. py:function:: download_csv_hierarchical_complexity(request)

.. py:function:: download_csv_information(request)

.. py:function:: download_csv_law(request)

.. py:function:: download_csv_professions(request)

.. py:function:: download_csv_social_scale(request)

.. py:function:: download_csv_special_purpose_sites(request)

.. py:function:: download_csv_specialized_buildings_polity_owned(request)

.. py:function:: download_csv_transport_infrastructure(request)

.. py:function:: drinking_water_supply_system_download(request)

.. py:function:: drinking_water_supply_system_meta_download(request)

.. py:function:: dynamic_create_view(request, form_class, x_name, myvar, my_exp, var_section, var_subsection)

.. py:function:: dynamic_detail_view(request, pk, model_class, myvar, var_name_display)

.. py:function:: dynamic_update_view(request, object_id, form_class, model_class, x_name, myvar, my_exp, var_section, var_subsection, delete_url_name)

.. py:function:: examination_system_download(request)

.. py:function:: examination_system_meta_download(request)

.. py:function:: fiction_download(request)

.. py:function:: fiction_meta_download(request)

.. py:function:: food_storage_site_download(request)

.. py:function:: food_storage_site_meta_download(request)

.. py:function:: foreign_coin_download(request)

.. py:function:: foreign_coin_meta_download(request)

.. py:function:: formal_legal_code_download(request)

.. py:function:: formal_legal_code_meta_download(request)

.. py:function:: full_time_bureaucrat_download(request)

.. py:function:: full_time_bureaucrat_meta_download(request)

.. py:function:: general_postal_service_download(request)

.. py:function:: general_postal_service_meta_download(request)

.. py:function:: generic_download(request, model_class, var_name)

.. py:function:: generic_list_view(request, model_class, var_name, var_name_display, var_section, var_subsection, var_main_desc)

.. py:function:: generic_metadata_download(request, var_name, var_name_display, var_section, var_subsection, var_main_desc)

.. py:function:: has_add_capital_permission(user)

.. py:function:: history_download(request)

.. py:function:: history_meta_download(request)

.. py:function:: indigenous_coin_download(request)

.. py:function:: indigenous_coin_meta_download(request)

.. py:function:: irrigation_system_download(request)

.. py:function:: irrigation_system_meta_download(request)

.. py:function:: judge_download(request)

.. py:function:: judge_meta_download(request)

.. py:function:: lists_tables_and_classification_download(request)

.. py:function:: lists_tables_and_classification_meta_download(request)

.. py:function:: market_download(request)

.. py:function:: market_meta_download(request)

.. py:function:: merit_promotion_download(request)

.. py:function:: merit_promotion_meta_download(request)

.. py:function:: military_level_download(request)

.. py:function:: military_level_meta_download(request)

.. py:function:: mines_or_quarry_download(request)

.. py:function:: mines_or_quarry_meta_download(request)

.. py:function:: mnemonic_device_download(request)

.. py:function:: mnemonic_device_meta_download(request)

.. py:function:: non_phonetic_writing_download(request)

.. py:function:: non_phonetic_writing_meta_download(request)

.. py:function:: nonwritten_record_download(request)

.. py:function:: nonwritten_record_meta_download(request)

.. py:function:: paper_currency_download(request)

.. py:function:: paper_currency_meta_download(request)

.. py:function:: philosophy_download(request)

.. py:function:: philosophy_meta_download(request)

.. py:function:: phonetic_alphabetic_writing_download(request)

.. py:function:: phonetic_alphabetic_writing_meta_download(request)

.. py:function:: polity_population_download(request)

   Download all the data of the Polity_population model as a CSV file.

   .. note:: The access to this view is restricted to users with the 'core.view_capital' permission.

   :param request: The request object.
   :type request: HttpRequest

   :returns: The response object.
   :rtype: HttpResponse


.. py:function:: polity_population_meta_download(request)

   Download the metadata of the Polity_population model as a CSV file.

   .. note:: The access to this view is restricted to users with the 'core.view_capital' permission.

   :param request: The request object.
   :type request: HttpRequest

   :returns: The response object.
   :rtype: HttpResponse


.. py:function:: polity_territory_download(request)

   Download all the data in the Polity_territory model as a CSV file.

   .. note:: The access to this view is restricted to users with the 'core.view_capital' permission.

   :param request: The request object.
   :type request: HttpRequest

   :returns: The response object.
   :rtype: HttpResponse


.. py:function:: polity_territory_meta_download(request)

   Download the metadata of the Polity_territory model as a CSV file.

   .. note:: The access to this view is restricted to users with the 'core.view_capital' permission.

   :param request: The request object.
   :type request: HttpRequest

   :returns: The response object.
   :rtype: HttpResponse


.. py:function:: population_of_the_largest_settlement_download(request)

.. py:function:: population_of_the_largest_settlement_meta_download(request)

.. py:function:: port_download(request)

.. py:function:: port_meta_download(request)

.. py:function:: postal_station_download(request)

.. py:function:: postal_station_meta_download(request)

.. py:function:: practical_literature_download(request)

.. py:function:: practical_literature_meta_download(request)

.. py:function:: precious_metal_download(request)

.. py:function:: precious_metal_meta_download(request)

.. py:function:: professional_lawyer_download(request)

.. py:function:: professional_lawyer_meta_download(request)

.. py:function:: professional_military_officer_download(request)

.. py:function:: professional_military_officer_meta_download(request)

.. py:function:: professional_priesthood_download(request)

.. py:function:: professional_priesthood_meta_download(request)

.. py:function:: professional_soldier_download(request)

.. py:function:: professional_soldier_meta_download(request)

.. py:function:: ra_download(request)

   Download all the data in the Ra model as a CSV file.

   .. note:: The access to this view is restricted to users with the 'core.view_capital' permission.

   :param request: The request object.
   :type request: HttpRequest

   :returns: The response object.
   :rtype: HttpResponse


.. py:function:: ra_meta_download(request)

   Download the metadata of the Ra model as a CSV file.

   .. note:: The access to this view is restricted to users with the 'core.view_capital' permission.

   :param request: The request object.
   :type request: HttpRequest

   :returns: The response object.
   :rtype: HttpResponse


.. py:function:: religious_level_download(request)

.. py:function:: religious_level_meta_download(request)

.. py:function:: religious_literature_download(request)

.. py:function:: religious_literature_meta_download(request)

.. py:function:: road_download(request)

.. py:function:: road_meta_download(request)

.. py:function:: sacred_text_download(request)

.. py:function:: sacred_text_meta_download(request)

.. py:function:: scientific_literature_download(request)

.. py:function:: scientific_literature_meta_download(request)

.. py:function:: script_download(request)

.. py:function:: script_meta_download(request)

.. py:function:: scvars(request)

.. py:function:: settlement_hierarchy_download(request)

.. py:function:: settlement_hierarchy_meta_download(request)

.. py:function:: show_problematic_sc_data_table(request)

.. py:function:: specialized_government_building_download(request)

.. py:function:: specialized_government_building_meta_download(request)

.. py:function:: token_download(request)

.. py:function:: token_meta_download(request)

.. py:function:: written_record_download(request)

.. py:function:: written_record_meta_download(request)

